//
//
// L·∫•y code √¢m d∆∞∆°ng t·ª´ HO NGOC DUC v√† ph√°t tri·ªÉn th·∫ª d√†nh cho Home Assistant c·ªßa Nguy·ªÖn Ti·∫øn Kh·∫£i - khaisilk1910
// Lunar Calendar Custom Card for Home Assistant
// HA custom card:
//   type: custom:lich-block-am-duong-viet-nam
//   background: transparent # Hai ch·∫ø ƒë·ªô normal(m·∫∑c ƒë·ªãnh) v√† transparent
//   background_opacity: 0.6 #0 l√† c√≥ m√†u n·ªÅn, 1 l√† m√†u n·ªÅn trong su·ªët ho√†n to√†n

(function(){
  'use strict';

  // ===== Utilities =====
  const PI = Math.PI;
  function INT(d){ return Math.floor(d); }

  // ===== Data tables (H·ªì Ng·ªçc ƒê·ª©c) =====
  const ABOUT = "√Çm l·ªãch Vi·ªát Nam Home Assistant - Ver 20Aug2025 ¬© 2025 Nguy·ªÖn Ti·∫øn Kh·∫£i";

  // TK19: Years 1800-1899 (kept for completeness, used for <1900)
  const TK19 = [
    0x30baa3, 0x56ab50, 0x422ba0, 0x2cab61, 0x52a370, 0x3c51e8, 0x60d160, 0x4ae4b0, 0x376926, 0x58daa0,
    0x445b50, 0x3116d2, 0x562ae0, 0x3ea2e0, 0x28e2d2, 0x4ec950, 0x38d556, 0x5cb520, 0x46b690, 0x325da4,
    0x5855d0, 0x4225d0, 0x2ca5b3, 0x52a2b0, 0x3da8b7, 0x60a950, 0x4ab4a0, 0x35b2a5, 0x5aad50, 0x4455b0,
    0x302b74, 0x562570, 0x4052f9, 0x6452b0, 0x4e6950, 0x386d56, 0x5e5aa0, 0x46ab50, 0x3256d4, 0x584ae0,
    0x42a570, 0x2d4553, 0x50d2a0, 0x3be8a7, 0x60d550, 0x4a5aa0, 0x34ada5, 0x5a95d0, 0x464ae0, 0x2eaab4,
    0x54a4d0, 0x3ed2b8, 0x64b290, 0x4cb550, 0x385757, 0x5e2da0, 0x4895d0, 0x324d75, 0x5849b0, 0x42a4b0,
    0x2da4b3, 0x506a90, 0x3aad98, 0x606b50, 0x4c2b60, 0x359365, 0x5a9370, 0x464970, 0x306964, 0x52e4a0,
    0x3cea6a, 0x62da90, 0x4e5ad0, 0x392ad6, 0x5e2ae0, 0x4892e0, 0x32cad5, 0x56c950, 0x40d4a0, 0x2bd4a3,
    0x50b690, 0x3a57a7, 0x6055b0, 0x4c25d0, 0x3695b5, 0x5a92b0, 0x44a950, 0x2ed954, 0x54b4a0, 0x3cb550,
    0x286b52, 0x4e55b0, 0x3a2776, 0x5e2570, 0x4852b0, 0x32aaa5, 0x56e950, 0x406aa0, 0x2abaa3, 0x50ab50
  ];

  // TK20: Years 1900-1999
  const TK20 = [
    0x3c4bd8, 0x624ae0, 0x4ca570, 0x3854d5, 0x5cd260, 0x44d950, 0x315554, 0x5656a0, 0x409ad0, 0x2a55d2,
    0x504ae0, 0x3aa5b6, 0x60a4d0, 0x48d250, 0x33d255, 0x58b540, 0x42d6a0, 0x2cada2, 0x5295b0, 0x3f4977,
    0x644970, 0x4ca4b0, 0x36b4b5, 0x5c6a50, 0x466d50, 0x312b54, 0x562b60, 0x409570, 0x2c52f2, 0x504970,
    0x3a6566, 0x5ed4a0, 0x48ea50, 0x336a95, 0x585ad0, 0x442b60, 0x2f86e3, 0x5292e0, 0x3dc8d7, 0x62c950,
    0x4cd4a0, 0x35d8a6, 0x5ab550, 0x4656a0, 0x31a5b4, 0x5625d0, 0x4092d0, 0x2ad2b2, 0x50a950, 0x38b557,
    0x5e6ca0, 0x48b550, 0x355355, 0x584da0, 0x42a5b0, 0x2f4573, 0x5452b0, 0x3ca9a8, 0x60e950, 0x4c6aa0,
    0x36aea6, 0x5aab50, 0x464b60, 0x30aae4, 0x56a570, 0x405260, 0x28f263, 0x4ed940, 0x38db47, 0x5cd6a0,
    0x4896d0, 0x344dd5, 0x5a4ad0, 0x42a4d0, 0x2cd4b4, 0x52b250, 0x3cd558, 0x60b540, 0x4ab5a0, 0x3755a6,
    0x5c95b0, 0x4649b0, 0x30a974, 0x56a4b0, 0x40aa50, 0x29aa52, 0x4e6d20, 0x39ad47, 0x5eab60, 0x489370,
    0x344af5, 0x5a4970, 0x4464b0, 0x2c74a3, 0x50ea50, 0x3d6a58, 0x6256a0, 0x4aaad0, 0x3696d5, 0x5c92e0
  ];

  // TK21: Years 2000-2099
  const TK21 = [
    0x46c960, 0x2ed954, 0x54d4a0, 0x3eda50, 0x2a7552, 0x4e56a0, 0x38a7a7, 0x5ea5d0, 0x4a92b0, 0x32aab5,
    0x58a950, 0x42b4a0, 0x2cbaa4, 0x50ad50, 0x3c55d9, 0x624ba0, 0x4ca5b0, 0x375176, 0x5c5270, 0x466930,
    0x307934, 0x546aa0, 0x3ead50, 0x2a5b52, 0x504b60, 0x38a6e6, 0x5ea4e0, 0x48d260, 0x32ea65, 0x56d520,
    0x40daa0, 0x2d56a3, 0x5256d0, 0x3c4afb, 0x6249d0, 0x4ca4d0, 0x37d0b6, 0x5ab250, 0x44b520, 0x2edd25,
    0x54b5a0, 0x3e55d0, 0x2a55b2, 0x5049b0, 0x3aa577, 0x5ea4b0, 0x48aa50, 0x33b255, 0x586d20, 0x40ad60,
    0x2d4b63, 0x525370, 0x3e49e8, 0x60c970, 0x4c54b0, 0x3768a6, 0x5ada50, 0x445aa0, 0x2fa6a4, 0x54aad0,
    0x4052e0, 0x28d2e3, 0x4ec950, 0x38d557, 0x5ed4a0, 0x46d950, 0x325d55, 0x5856a0, 0x42a6d0, 0x2c55d4,
    0x5252b0, 0x3ca9b8, 0x62a930, 0x4ab490, 0x34b6a6, 0x5aad50, 0x4655a0, 0x2eab64, 0x54a570, 0x4052b0,
    0x2ab173, 0x4e6930, 0x386b37, 0x5e6aa0, 0x48ad50, 0x332ad5, 0x582b60, 0x42a570, 0x2e52e4, 0x50d160,
    0x3ae958, 0x60d520, 0x4ada90, 0x355aa6, 0x5a56d0, 0x462ae0, 0x30a9d4, 0x54a2d0, 0x3ed150, 0x28e952
  ];

  // TK22: Years 2100-2199
  const TK22 = [
    0x4eb520, 0x38d727, 0x5eada0, 0x4a55b0, 0x362db5, 0x5a45b0, 0x44a2b0, 0x2eb2b4, 0x54a950, 0x3cb559,
    0x626b20, 0x4cad50, 0x385766, 0x5c5370, 0x484570, 0x326574, 0x5852b0, 0x406950, 0x2a7953, 0x505aa0,
    0x3baaa7, 0x5ea6d0, 0x4a4ae0, 0x35a2e5, 0x5aa550, 0x42d2a0, 0x2de2a4, 0x52d550, 0x3e5abb, 0x6256a0,
    0x4c96d0, 0x3949b6, 0x5e4ab0, 0x46a8d0, 0x30d4b5, 0x56b290, 0x40b550, 0x2a6d52, 0x504da0, 0x3b9567,
    0x609570, 0x4a49b0, 0x34a975, 0x5a64b0, 0x446a90, 0x2cba94, 0x526b50, 0x3e2b60, 0x28ab61, 0x4c9570,
    0x384ae6, 0x5cd160, 0x46e4a0, 0x2eed25, 0x54da90, 0x405b50, 0x2c36d3, 0x502ae0, 0x3a93d7, 0x6092d0,
    0x4ac950, 0x32d556, 0x58b4a0, 0x42b690, 0x2e5d94, 0x5255b0, 0x3e25fa, 0x6425b0, 0x4e92b0, 0x36aab6,
    0x5c6950, 0x4674a0, 0x31b2a5, 0x54ad50, 0x4055a0, 0x2aab73, 0x522570, 0x3a5377, 0x6052b0, 0x4a6950,
    0x346d56, 0x585aa0, 0x42ab50, 0x2e56d4, 0x544ae0, 0x3ca570, 0x2864d2, 0x4cd260, 0x36eaa6, 0x5ad550,
    0x465aa0, 0x30ada5, 0x5695d0, 0x404ad0, 0x2aa9b3, 0x50a4d0, 0x3ad2b7, 0x5eb250, 0x48b540, 0x33d556
  ];

  const CAN = ["Gi√°p","·∫§t","B√≠nh","ƒêinh","M·∫≠u","K·ª∑","Canh","T√¢n","Nh√¢m","Qu√Ω"];
  const CHI = ["T√Ω","S·ª≠u","D·∫ßn","M√£o","Th√¨n","T·ªµ","Ng·ªç","M√πi","Th√¢n","D·∫≠u","Tu·∫•t","H·ª£i"];
  // M·∫£ng emoji ri√™ng
  const CHI_EMOJI = ["üê≠","üêÇ","üêØ","üê±","üê≤","üêç","üê¥","üêê","üêµ","üêî","üê∂","üê∑"];
  const TUAN = ["Ch·ªß Nh·∫≠t","Th·ª© Hai","Th·ª© Ba","Th·ª© T∆∞","Th·ª© NƒÉm","Th·ª© S√°u","Th·ª© B·∫£y"];
  const GIO_HD = ["110100101100","001101001011","110011010010","101100110100","001011001101","010010110011"]; // Ty..Hoi

  const TIETKHI = [
    "Xu√¢n Ph√¢n","Thanh Minh","C·ªëc V≈©","L·∫≠p H·∫°","Ti·ªÉu M√£n","Mang Ch·ªßng",
    "H·∫° Ch√≠","Ti·ªÉu Th·ª≠","ƒê·∫°i Th·ª≠","L·∫≠p Thu","X·ª≠ Th·ª≠","B·∫°ch L·ªô",
    "Thu Ph√¢n","H√†n l·ªô","S∆∞∆°ng Gi√°ng","L·∫≠p ƒë√¥ng","Ti·ªÉu Tuy·∫øt","ƒê·∫°i Tuy·∫øt",
    "ƒê√¥ng Ch√≠","Ti·ªÉu H√†n","ƒê·∫°i H√†n","L·∫≠p Xu√¢n","V≈© Th·ªßy","Kinh Tr·∫≠p"
  ];

  const NGAY_LE_DL = [
    "1/1","9/1","3/2","14/2","27/2","8/3","20/3","22/3","26/3","31/3","1/4","30/4","1/5","7/5","12/5","19/5","1/6","18/6","21/6","28/6","11/7","27/7","28/7","19/8","2/9","10/9","1/10","10/10","13/10","16/10","17/10","20/10","31/10","9/11","19/11","20/11","23/11","28/11","29/11","1/12","19/12","25/12","22/12"
  ];
  const NGAY_LE_DL_STRING = [
    "T·∫øt D∆∞∆°ng l·ªãch","Truy·ªÅn th·ªëng h·ªçc sinh, sinh vi√™n Vi·ªát Nam","Th√†nh l·∫≠p ƒê·∫£ng C·ªông S·∫£n Vi·ªát Nam","L·ªÖ t√¨nh nh√¢n","Th·∫ßy thu·ªëc Vi·ªát Nam","Qu·ªëc t·∫ø Ph·ª• n·ªØ","Qu·ªëc t·∫ø H·∫°nh ph√∫c","N∆∞·ªõc s·∫°ch Th·∫ø gi·ªõi","Th√†nh l·∫≠p ƒêo√†n TNCS H·ªì Ch√≠ Minh","L·ªÖ Ph·ª•c Sinh","C√° th√°ng T∆∞","Gi·∫£i ph√≥ng Mi·ªÅn Nam","Qu·ªëc t·∫ø Lao ƒë·ªông","Chi·∫øn th·∫Øng ƒêi·ªán Bi√™n Ph·ªß","Ng√†y c·ªßa M·∫π","Ng√†y sinh Ch·ªß t·ªãch H·ªì Ch√≠ Minh","Qu·ªëc t·∫ø Thi·∫øu Nhi","Ng√†y c·ªßa Cha","B√°o ch√≠ Vi·ªát Nam","Gia ƒë√¨nh Vi·ªát Nam","D√¢n s·ªë th·∫ø gi·ªõi","Th∆∞∆°ng binh li·ªát sƒ©","Th√†nh l·∫≠p c√¥ng ƒëo√†n Vi·ªát Nam","K·ª∑ ni·ªám C√°ch m·∫°ng Th√°ng 8 th√†nh c√¥ng","Qu·ªëc Kh√°nh","Th√†nh l·∫≠p M·∫∑t tr·∫≠n T·ªï qu·ªëc Vi·ªát Nam","Qu·ªëc t·∫ø ng∆∞·ªùi cao tu·ªïi","Ng√†y gi·∫£i ph√≥ng Th·ªß ƒê√¥","Doanh nh√¢n Vi·ªát Nam","Ng√†y L∆∞∆°ng th·ª±c th·∫ø gi·ªõi","Ng√†y qu·ªëc t·∫ø x√≥a ngh√®o","Ph·ª• n·ªØ Vi·ªát Nam (20.10.1930)","Halloween","Ph√°p lu·∫≠t Vi·ªát Nam","Qu·ªëc t·∫ø Nam gi·ªõi","Nh√† gi√°o Vi·ªát Nam","Th√†nh l·∫≠p H·ªôi ch·ªØ th·∫≠p ƒë·ªè Vi·ªát Nam","L·ªÖ T·∫° ∆†n","Black Friday","Th·∫ø gi·ªõi ph√≤ng ch·ªëng AIDS","To√†n qu·ªëc kh√°ng chi·∫øn","L·ªÖ Gi√°ng Sinh","Th√†nh l·∫≠p Qu√¢n ƒë·ªôi nh√¢n d√¢n Vi·ªát Nam"
  ];
  const NGAY_LE_AL = ["1/1","15/1","3/3","10/3","15/4","5/5","7/7","15/7","15/8","9/9","10/10","15/10","23/12"];
  const NGAY_LE_AL_STRING = ["T·∫øt Nguy√™n ƒê√°n","T·∫øt Nguy√™n Ti√™u","T·∫øt H√†n Th·ª±c, Ti·∫øt Thanh Minh","Gi·ªó t·ªï H√πng V∆∞∆°ng","L·ªÖ Ph·∫≠t ƒê·∫£n","T·∫øt ƒêoan Ng·ªç","L·ªÖ Th·∫•t T·ªãch","L·ªÖ Vu Lan","T·∫øt Trung Thu","T·∫øt Tr√πng C·ª≠u","T·∫øt Tr√πng Th·∫≠p","T·∫øt H·∫° Nguy√™n","√îng T√°o V·ªÅ Tr·ªùi"];

	const VIEC_NEN_LAM = {
	  "Gi√°p T√Ω": "Khai Tr∆∞∆°ng, C·∫ßu T√†i, Xu·∫•t H√†nh, C∆∞·ªõi H·ªèi",
	  "·∫§t S·ª≠u": "ƒê·ªông Th·ªï, X√¢y D·ª±ng, C·∫ßu Ph√∫c",
	  "B√≠nh D·∫ßn": "C·∫ßu T√†i, K√Ω K·∫øt, Khai Tr∆∞∆°ng",
	  "ƒêinh M√£o": "C∆∞·ªõi H·ªèi, Nh·∫≠p Tr·∫°ch, ƒê·ªông Th·ªï",
	  "M·∫≠u Th√¨n": "Khai Tr∆∞∆°ng, T·∫ø L·ªÖ, C·∫ßu Ph√∫c",
	  "K·ª∑ T·ªµ": "C·∫ßu T√†i, Khai Tr∆∞∆°ng, K√Ω K·∫øt",
	  "Canh Ng·ªç": "C∆∞·ªõi H·ªèi, Xu·∫•t H√†nh, C·∫ßu L·ªôc",
	  "T√¢n M√πi": "ƒê·ªông Th·ªï, Nh·∫≠p Tr·∫°ch, An T√°ng",
	  "Nh√¢m Th√¢n": "C·∫ßu T√†i, Khai Tr∆∞∆°ng, Giao D·ªãch",
	  "Qu√Ω D·∫≠u": "C∆∞·ªõi H·ªèi, T·∫ø L·ªÖ, Nh·∫≠p Tr·∫°ch",
	  "Gi√°p Tu·∫•t": "Khai Tr∆∞∆°ng, C·∫ßu Ph√∫c, X√¢y D·ª±ng",
	  "·∫§t H·ª£i": "C·∫ßu T√†i, C·∫ßu L·ªôc, Xu·∫•t H√†nh",
	  "B√≠nh T√Ω": "C∆∞·ªõi H·ªèi, K√Ω K·∫øt, Khai Tr∆∞∆°ng",
	  "ƒêinh S·ª≠u": "ƒê·ªông Th·ªï, X√¢y D·ª±ng, Tu T·∫°o",
	  "M·∫≠u D·∫ßn": "C·∫ßu T√†i, Khai Tr∆∞∆°ng, Xu·∫•t H√†nh",
	  "K·ª∑ M√£o": "C∆∞·ªõi H·ªèi, C·∫ßu Ph√∫c, Nh·∫≠p Tr·∫°ch",
	  "Canh Th√¨n": "Khai Tr∆∞∆°ng, C·∫ßu T√†i, Giao D·ªãch",
	  "T√¢n T·ªµ": "C·∫ßu T√†i, K√Ω K·∫øt, Xu·∫•t H√†nh",
	  "Nh√¢m Ng·ªç": "C∆∞·ªõi H·ªèi, C·∫ßu L·ªôc, Khai Tr∆∞∆°ng",
	  "Qu√Ω M√πi": "ƒê·ªông Th·ªï, An T√°ng, Tu T·∫°o",
	  "Gi√°p Th√¢n": "C·∫ßu T√†i, Khai Tr∆∞∆°ng, K√Ω K·∫øt",
	  "·∫§t D·∫≠u": "C∆∞·ªõi H·ªèi, Nh·∫≠p Tr·∫°ch, C·∫ßu Ph√∫c",
	  "B√≠nh Tu·∫•t": "Khai Tr∆∞∆°ng, Xu·∫•t H√†nh, Giao D·ªãch",
	  "ƒêinh H·ª£i": "C·∫ßu T√†i, C·∫ßu L·ªôc, K√Ω K·∫øt",
	  "M·∫≠u T√Ω": "C∆∞·ªõi H·ªèi, T·∫ø L·ªÖ, Nh·∫≠p Tr·∫°ch",
	  "K·ª∑ S·ª≠u": "ƒê·ªông Th·ªï, X√¢y D·ª±ng, An T√°ng",
	  "Canh D·∫ßn": "Khai Tr∆∞∆°ng, C·∫ßu T√†i, K√Ω K·∫øt",
	  "T√¢n M√£o": "C∆∞·ªõi H·ªèi, C·∫ßu L·ªôc, Nh·∫≠p Tr·∫°ch",
	  "Nh√¢m Th√¨n": "Khai Tr∆∞∆°ng, T·∫ø L·ªÖ, Xu·∫•t H√†nh",
	  "Qu√Ω T·ªµ": "C·∫ßu T√†i, Giao D·ªãch, C·∫ßu L·ªôc",
	  "Gi√°p Ng·ªç": "C∆∞·ªõi H·ªèi, Khai Tr∆∞∆°ng, Xu·∫•t H√†nh",
	  "·∫§t M√πi": "ƒê·ªông Th·ªï, X√¢y D·ª±ng, An T√°ng",
	  "B√≠nh Th√¢n": "C·∫ßu T√†i, K√Ω K·∫øt, Khai Tr∆∞∆°ng",
	  "ƒêinh D·∫≠u": "C∆∞·ªõi H·ªèi, Nh·∫≠p Tr·∫°ch, C·∫ßu Ph√∫c",
	  "M·∫≠u Tu·∫•t": "Khai Tr∆∞∆°ng, C·∫ßu T√†i, Giao D·ªãch",
	  "K·ª∑ H·ª£i": "C·∫ßu T√†i, Xu·∫•t H√†nh, C·∫ßu L·ªôc",
	  "Canh T√Ω": "C∆∞·ªõi H·ªèi, C·∫ßu Ph√∫c, Khai Tr∆∞∆°ng",
	  "T√¢n S·ª≠u": "ƒê·ªông Th·ªï, Tu T·∫°o, An T√°ng",
	  "Nh√¢m D·∫ßn": "C·∫ßu T√†i, K√Ω K·∫øt, Khai Tr∆∞∆°ng",
	  "Qu√Ω M√£o": "C∆∞·ªõi H·ªèi, Nh·∫≠p Tr·∫°ch, C·∫ßu Ph√∫c",
	  "Gi√°p Th√¨n": "Khai Tr∆∞∆°ng, Xu·∫•t H√†nh, C·∫ßu T√†i",
	  "·∫§t T·ªµ": "C·∫ßu T√†i, K√Ω K·∫øt, C·∫ßu L·ªôc",
	  "B√≠nh Ng·ªç": "C∆∞·ªõi H·ªèi, C·∫ßu Ph√∫c, Khai Tr∆∞∆°ng",
	  "ƒêinh M√πi": "ƒê·ªông Th·ªï, X√¢y D·ª±ng, Nh·∫≠p Tr·∫°ch",
	  "M·∫≠u Th√¢n": "Khai Tr∆∞∆°ng, C·∫ßu T√†i, Xu·∫•t H√†nh",
	  "K·ª∑ D·∫≠u": "C∆∞·ªõi H·ªèi, C·∫ßu Ph√∫c, T·∫ø L·ªÖ",
	  "Canh Tu·∫•t": "Khai Tr∆∞∆°ng, C·∫ßu T√†i, K√Ω K·∫øt",
	  "T√¢n H·ª£i": "C·∫ßu T√†i, Xu·∫•t H√†nh, C·∫ßu L·ªôc",
	  "Nh√¢m T√Ω": "C∆∞·ªõi H·ªèi, Nh·∫≠p Tr·∫°ch, C·∫ßu Ph√∫c",
	  "Qu√Ω S·ª≠u": "ƒê·ªông Th·ªï, X√¢y D·ª±ng, An T√°ng",
	  "Gi√°p D·∫ßn": "Khai Tr∆∞∆°ng, C·∫ßu T√†i, K√Ω K·∫øt",
	  "·∫§t M√£o": "C∆∞·ªõi H·ªèi, C·∫ßu L·ªôc, Nh·∫≠p Tr·∫°ch",
	  "B√≠nh Th√¨n": "Khai Tr∆∞∆°ng, T·∫ø L·ªÖ, Xu·∫•t H√†nh",
	  "ƒêinh T·ªµ": "C·∫ßu T√†i, Giao D·ªãch, C·∫ßu L·ªôc",
	  "M·∫≠u Ng·ªç": "C∆∞·ªõi H·ªèi, Khai Tr∆∞∆°ng, Xu·∫•t H√†nh",
	  "K·ª∑ M√πi": "ƒê·ªông Th·ªï, X√¢y D·ª±ng, Tu T·∫°o",
	  "Canh Th√¢n": "C·∫ßu T√†i, K√Ω K·∫øt, Khai Tr∆∞∆°ng",
	  "T√¢n D·∫≠u": "C∆∞·ªõi H·ªèi, Nh·∫≠p Tr·∫°ch, C·∫ßu Ph√∫c",
	  "Nh√¢m Tu·∫•t": "Khai Tr∆∞∆°ng, C·∫ßu T√†i, Xu·∫•t H√†nh",
	  "Qu√Ω H·ª£i": "C·∫ßu T√†i, C·∫ßu L·ªôc, Giao D·ªãch"
	};
	
	const VIEC_KIENGLAM = {
	  "Gi√°p T√Ω": "Ch√¥n C·∫•t, ƒêi Xa, Ki·ªán T·ª•ng",
	  "·∫§t S·ª≠u": "C∆∞·ªõi H·ªèi, Khai Tr∆∞∆°ng L·ªõn",
	  "B√≠nh D·∫ßn": "An T√°ng, Ki·ªán T·ª•ng",
	  "ƒêinh M√£o": "X√¢y D·ª±ng L·ªõn, ƒêi Xa",
	  "M·∫≠u Th√¨n": "C∆∞·ªõi H·ªèi, Ch√¥n C·∫•t",
	  "K·ª∑ T·ªµ": "X√¢y Nh√†, Xu·∫•t H√†nh H∆∞·ªõng Nam",
	  "Canh Ng·ªç": "An T√°ng, ƒê·ªông Th·ªï L·ªõn",
	  "T√¢n M√πi": "Khai Tr∆∞∆°ng, Xu·∫•t H√†nh Xa",
	  "Nh√¢m Th√¢n": "C∆∞·ªõi H·ªèi, Ch√¥n C·∫•t",
	  "Qu√Ω D·∫≠u": "X√¢y D·ª±ng, Khai Tr∆∞∆°ng",
	  "Gi√°p Tu·∫•t": "An T√°ng, Ki·ªán T·ª•ng",
	  "·∫§t H·ª£i": "C∆∞·ªõi H·ªèi, Xu·∫•t H√†nh Xa",
	  "B√≠nh T√Ω": "ƒê·ªông Th·ªï, Ch√¥n C·∫•t",
	  "ƒêinh S·ª≠u": "Khai Tr∆∞∆°ng, Xu·∫•t H√†nh Xa",
	  "M·∫≠u D·∫ßn": "C∆∞·ªõi H·ªèi, An T√°ng",
	  "K·ª∑ M√£o": "X√¢y D·ª±ng, Xu·∫•t H√†nh Xa",
	  "Canh Th√¨n": "An T√°ng, C·∫ßu T√†i",
	  "T√¢n T·ªµ": "C∆∞·ªõi H·ªèi, X√¢y D·ª±ng L·ªõn",
	  "Nh√¢m Ng·ªç": "Ch√¥n C·∫•t, ƒê·ªông Th·ªï",
	  "Qu√Ω M√πi": "Khai Tr∆∞∆°ng, ƒêi Xa",
	  "Gi√°p Th√¢n": "C∆∞·ªõi H·ªèi, Ch√¥n C·∫•t",
	  "·∫§t D·∫≠u": "X√¢y D·ª±ng, Xu·∫•t H√†nh Xa",
	  "B√≠nh Tu·∫•t": "Khai Tr∆∞∆°ng, Ki·ªán T·ª•ng",
	  "ƒêinh H·ª£i": "An T√°ng, C∆∞·ªõi H·ªèi",
	  "M·∫≠u T√Ω": "X√¢y D·ª±ng, Xu·∫•t H√†nh Xa",
	  "K·ª∑ S·ª≠u": "C∆∞·ªõi H·ªèi, An T√°ng",
	  "Canh D·∫ßn": "Khai Tr∆∞∆°ng, ƒê·ªông Th·ªï",
	  "T√¢n M√£o": "Ch√¥n C·∫•t, Ki·ªán T·ª•ng",
	  "Nh√¢m Th√¨n": "C∆∞·ªõi H·ªèi, X√¢y D·ª±ng",
	  "Qu√Ω T·ªµ": "Khai Tr∆∞∆°ng, ƒêi Xa",
	  "Gi√°p Ng·ªç": "An T√°ng, C∆∞·ªõi H·ªèi",
	  "·∫§t M√πi": "X√¢y D·ª±ng, Khai Tr∆∞∆°ng",
	  "B√≠nh Th√¢n": "C∆∞·ªõi H·ªèi, An T√°ng",
	  "ƒêinh D·∫≠u": "Khai Tr∆∞∆°ng, Ki·ªán T·ª•ng",
	  "M·∫≠u Tu·∫•t": "X√¢y D·ª±ng, Xu·∫•t H√†nh Xa",
	  "K·ª∑ H·ª£i": "C∆∞·ªõi H·ªèi, Ch√¥n C·∫•t",
	  "Canh T√Ω": "Khai Tr∆∞∆°ng, ƒê·ªông Th·ªï",
	  "T√¢n S·ª≠u": "An T√°ng, C∆∞·ªõi H·ªèi",
	  "Nh√¢m D·∫ßn": "X√¢y D·ª±ng, Xu·∫•t H√†nh Xa",
	  "Qu√Ω M√£o": "C∆∞·ªõi H·ªèi, An T√°ng",
	  "Gi√°p Th√¨n": "Khai Tr∆∞∆°ng, ƒêi Xa",
	  "·∫§t T·ªµ": "X√¢y D·ª±ng, C∆∞·ªõi H·ªèi",
	  "B√≠nh Ng·ªç": "An T√°ng, C·∫ßu T√†i",
	  "ƒêinh M√πi": "Khai Tr∆∞∆°ng, Ch√¥n C·∫•t",
	  "M·∫≠u Th√¢n": "C∆∞·ªõi H·ªèi, Xu·∫•t H√†nh Xa",
	  "K·ª∑ D·∫≠u": "X√¢y D·ª±ng, Ki·ªán T·ª•ng",
	  "Canh Tu·∫•t": "Ch√¥n C·∫•t, ƒêi Xa",
	  "T√¢n H·ª£i": "C∆∞·ªõi H·ªèi, Khai Tr∆∞∆°ng",
	  "Nh√¢m T√Ω": "ƒê·ªông Th·ªï, X√¢y D·ª±ng",
	  "Qu√Ω S·ª≠u": "C∆∞·ªõi H·ªèi, ƒêi Xa",
	  "Gi√°p D·∫ßn": "Ch√¥n C·∫•t, Khai Tr∆∞∆°ng",
	  "·∫§t M√£o": "X√¢y D·ª±ng, An T√°ng",
	  "B√≠nh Th√¨n": "C∆∞·ªõi H·ªèi, Ki·ªán T·ª•ng",
	  "ƒêinh T·ªµ": "Khai Tr∆∞∆°ng, Xu·∫•t H√†nh Xa",
	  "M·∫≠u Ng·ªç": "An T√°ng, X√¢y D·ª±ng",
	  "K·ª∑ M√πi": "C∆∞·ªõi H·ªèi, ƒêi Xa",
	  "Canh Th√¢n": "Khai Tr∆∞∆°ng, C·∫ßu T√†i",
	  "T√¢n D·∫≠u": "X√¢y D·ª±ng, Ch√¥n C·∫•t",
	  "Nh√¢m Tu·∫•t": "C∆∞·ªõi H·ªèi, Khai Tr∆∞∆°ng",
	  "Qu√Ω H·ª£i": "ƒê·ªông Th·ªï, ƒêi Xa"
	};


// ===== H∆∞·ªõng Xu·∫•t H√†nh (theo Can ng√†y) =====
const THAN_HUONG = {
  "Gi√°p": { hyThan: "ƒê√¥ng B·∫Øc", taiThan: "ƒê√¥ng Nam", hacThan: "T√¢y B·∫Øc" },
  "·∫§t":   { hyThan: "T√¢y B·∫Øc", taiThan: "ƒê√¥ng Nam", hacThan: "Ch√≠nh ƒê√¥ng" },
  "B√≠nh": { hyThan: "T√¢y Nam", taiThan: "Ch√≠nh T√¢y", hacThan: "Ch√≠nh Nam" },
  "ƒêinh": { hyThan: "Ch√≠nh Nam", taiThan: "Ch√≠nh T√¢y", hacThan: "Ch√≠nh T√¢y" },
  "M·∫≠u":  { hyThan: "ƒê√¥ng Nam", taiThan: "Ch√≠nh B·∫Øc", hacThan: "T√¢y Nam" },
  "K·ª∑":   { hyThan: "ƒê√¥ng B·∫Øc", taiThan: "Ch√≠nh B·∫Øc", hacThan: "Ch√≠nh B·∫Øc" },
  "Canh": { hyThan: "T√¢y B·∫Øc", taiThan: "Ch√≠nh ƒê√¥ng", hacThan: "ƒê√¥ng Nam" },
  "T√¢n":  { hyThan: "T√¢y Nam", taiThan: "Ch√≠nh ƒê√¥ng", hacThan: "ƒê√¥ng B·∫Øc" },
  "Nh√¢m": { hyThan: "Ch√≠nh Nam", taiThan: "Ch√≠nh T√¢y", hacThan: "T√¢y B·∫Øc" },
  "Qu√Ω":  { hyThan: "ƒê√¥ng Nam", taiThan: "Ch√≠nh T√¢y", hacThan: "T√¢y Nam" }
};


// ===== Th·∫≠p nh·ªã tr·ª±c =====
const THAP_NHI_TRUC = {
  "Ki·∫øn": { tot: "Xu·∫•t h√†nh, Khai tr∆∞∆°ng, ƒê·ªông th·ªï, Nh·∫≠p h·ªçc", xau: "An t√°ng" },
  "Tr·ª´":  { tot: "Tr·ª´ b·ªánh, C·∫Øt may, L√†m thu·ªëc", xau: "Khai tr∆∞∆°ng, Xu·∫•t h√†nh" },
  "M√£n":  { tot: "C∆∞·ªõi h·ªèi, C·∫ßu t√†i, C·∫ßu ph√∫c", xau: "Ki·ªán t·ª•ng, Ch√¥n c·∫•t" },
  "B√¨nh": { tot: "C√∫ng t·∫ø, C·∫ßu ph√∫c, Giao d·ªãch", xau: "Xu·∫•t h√†nh xa, Tranh t·ª•ng" },
  "ƒê·ªãnh": { tot: "C∆∞·ªõi h·ªèi, K√Ω k·∫øt, Nh·∫≠p tr·∫°ch", xau: "Khai tr∆∞∆°ng l·ªõn" },
  "Ch·∫•p": { tot: "X√¢y d·ª±ng, Tr·ªìng tr·ªçt, Giao d·ªãch nh·ªè", xau: "Khai tr∆∞∆°ng, Xu·∫•t h√†nh xa" },
  "Ph√°":  { tot: "Tr·ªã b·ªánh, Ph√° d·ª°, D·ªçn d·∫πp", xau: "C·∫ßu t√†i, C∆∞·ªõi h·ªèi, An t√°ng" },
  "Nguy":  { tot: "L√†m vi·ªác m·∫°o hi·ªÉm, C·∫ßu c√¥ng danh", xau: "C∆∞·ªõi h·ªèi, An t√°ng, Khai tr∆∞∆°ng" },
  "Th√†nh":{ tot: "Khai tr∆∞∆°ng, C·∫ßu t√†i, X√¢y d·ª±ng, C∆∞·ªõi h·ªèi", xau: "Ki·ªán t·ª•ng" },
  "Thu":  { tot: "C√∫ng t·∫ø, Gieo tr·ªìng, Thu ho·∫°ch", xau: "Khai tr∆∞∆°ng, Xu·∫•t h√†nh" },
  "Khai": { tot: "Khai tr∆∞∆°ng, Xu·∫•t h√†nh, M·ªü c·ª≠a h√†ng", xau: "An t√°ng, Ch√¥n c·∫•t" },
  "B·∫ø":  { tot: "An t√°ng, Tu s·ª≠a m·ªô ph·∫ßn", xau: "Khai tr∆∞∆°ng, Xu·∫•t h√†nh, C∆∞·ªõi h·ªèi" }
};

// ===== Nh·ªã th·∫≠p b√°t t√∫ =====
const NHI_THAP_BAT_TU = {
  "Gi√°c": {
    tenNgay: "Gi√°c M·ªôc Giao - S√°i Tu√¢n",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con Giao Long, ch·ªß tr·ªã ng√†y th·ª© 5.",
    nenLam: "C∆∞·ªõi g·∫£, thi c·ª≠, kh·ªüi c√¥ng, x√¢y c·∫•t, an t√°ng, l√†m vi·ªác thi·ªán. M·ªçi vi·ªác ƒë·ªÅu t·ªët.",
    kiengCu: "Kh√¥ng c√≥ vi·ªác g√¨ ph·∫£i ki√™ng k·ªµ ƒë·∫∑c bi·ªát.",
    ngoaiLe: "T·∫°i Th√¨n l√† ƒêƒÉng Vi√™n, t·∫°o t√°c ƒë·∫°i l·ª£i. T·∫°i T√Ω l√† Sinh ƒê·ªãa, c≈©ng r·∫•t t·ªët. T·∫°i Th√¢n l√† Di·ªát ƒê·ªãa, n√™n tr√°nh. G·∫∑p ng√†y Canh Th√¨n ho·∫∑c M·∫≠u Th√¨n, x√¢y c·∫•t t·ªët l√†nh.",
    tho: "Gi√°c tinh t·∫°o t√°c ch·ªß vinh x∆∞∆°ng,\nNgo·∫°i quan h·ª∑ s·ª± ƒë·∫°i c√°t t∆∞·ªùng,\nGi√° th√∫ tu du tam tu·∫ø t·ª≠,\nAn t√°ng, chi√™u t√†i c·∫≠p ƒëi·ªÅn trang."
  },
  "Cang": {
    tenNgay: "Cang Kim Long - Di√™u K·ª≥",
    danhGia: "T·ªët (B√¨nh T√∫)",
    tuongTinh: "Con R·ªìng, ch·ªß tr·ªã ng√†y th·ª© 6.",
    nenLam: "C·∫Øt may √°o m·ªõi, khai tr∆∞∆°ng nh·ªè.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi. Ch√¥n c·∫•t, x√¢y c·∫•t nh√† c·ª≠a, kh·ªüi c√¥ng l·ªõn ƒë·ªÅu kh√¥ng t·ªët, d·ªÖ g·∫∑p ƒëi·ªÅu kh√¥ng may.",
    ngoaiLe: "T·∫°i Th√¨n l√† Ph·ª•c ƒêo·∫°n S√°t, k·ªµ ch√¥n c·∫•t, xu·∫•t h√†nh, th·ª´a k·∫ø, chia gia t√†i. T·∫°i S·ª≠u l√† Nh·∫≠p Mi·∫øu, kh·ªüi t·∫°o r·∫•t t·ªët. T·∫°i Tu·∫•t, k·ªµ x√¢y c·∫•t.",
    tho: "Cang tinh t·∫°o t√°c b√¢t an t∆∞·ªùng,\nTh·∫≠p nh·∫≠t chi trung h·ªØu l∆∞·ª°ng th∆∞∆°ng,\nGi√° th√∫, khai m√¥n, tu ph√≤ng th·∫•t,\nMai t√°ng nh·ªã th·∫≠p nh·∫≠t ki·∫øn hung."
  },
  "ƒê√™": {
    tenNgay: "ƒê√™ Th·ªï L·∫°c - Ng√¥ H√°n",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con L·ª≠ng, ch·ªß tr·ªã ng√†y th·ª© 7.",
    nenLam: "C·∫ßu ph√∫c, gieo tr·ªìng, l√†m nh·ªØng vi·ªác nh·ªè.",
    kiengCu: "Kh·ªüi c√¥ng x√¢y d·ª±ng, c∆∞·ªõi h·ªèi, ch√¥n c·∫•t, khai tr∆∞∆°ng, xu·∫•t h√†nh xa. L√†m c√°c vi·ªác n√†y d·ªÖ g·∫∑p th·∫•t b·∫°i, ki·ªán t·ª•ng.",
    ngoaiLe: "T·∫°i M√£o, H·ª£i, M√πi, m·ªçi vi·ªác ƒë·ªÅu t·ªët. G·∫∑p ng√†y M√£o l√† ƒêƒÉng Vi√™n, c√°c vi·ªác t·ªët ƒë·∫πp.",
    tho: "ƒê√™ tinh t·∫°o t√°c ch·ªß tai hung,\nT√† ma qu·ª∑ qu√°i nh·∫≠p ph√≤ng trung,\nKhai m√¥n, ph√≥ng th·ªßy tu ph√≤ng t·ª≠,\nGi√° th√∫, mai t√°ng ti·ªám ti·ªám kh√¥ng."
  },
  "Ph√≤ng": {
    tenNgay: "Ph√≤ng Nh·∫≠t Th·ªë - C·∫£nh ƒêan",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con Th·ªè, ch·ªß tr·ªã ng√†y Ch·ªß Nh·∫≠t.",
    nenLam: "M·ªçi vi·ªác ƒë·ªÅu t·ªët. Nh·∫•t l√† kh·ªüi c√¥ng, x√¢y d·ª±ng, c∆∞·ªõi h·ªèi, khai tr∆∞∆°ng, xu·∫•t h√†nh, nh·∫≠m ch·ª©c, an t√°ng.",
    kiengCu: "Kh√¥ng c√≥.",
    ngoaiLe: "G·∫∑p ng√†y H·ª£i, M√£o, M√πi th√¨ k·ªµ ch√¥n c·∫•t.",
    tho: "Ph√≤ng tinh t·∫°o t√°c ƒë·∫°i c√°t x∆∞∆°ng,\nGi√° th√∫, ƒëi·ªÅn t√†m ƒë·∫°i c√°t t∆∞·ªùng,\nMai t√°ng b√° ni√™n tƒÉng ph√∫ qu√Ω,\nPh√≥ng th·ªßy, khai m√¥n chi√™u t√†i v∆∞·ª£ng."
  },
  "T√¢m": {
    tenNgay: "T√¢m Nguy·ªát H·ªì - Kh·∫•u Tu√¢n",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con C√°o, ch·ªß tr·ªã ng√†y th·ª© 2.",
    nenLam: "Tr·ªã b·ªánh, ph√° d·ª°, d·ªçn d·∫πp nh√† c·ª≠a.",
    kiengCu: "M·ªçi vi·ªác l·ªõn nh∆∞ c∆∞·ªõi h·ªèi, khai tr∆∞∆°ng, x√¢y c·∫•t, ch√¥n c·∫•t, ki·ªán t·ª•ng ƒë·ªÅu r·∫•t x·∫•u, d·ªÖ g·∫∑p tai h·ªça, ph√° s·∫£n.",
    ngoaiLe: "T·∫°i D·∫ßn, Ng·ªç, Tu·∫•t m·ªçi vi·ªác ƒë·ªÅu t·ªët.",
    tho: "T√¢m tinh t·∫°o t√°c ƒë·∫°i vi hung,\nC√°nh tao h√¨nh t·ª•ng, c·∫≠p lao lung,\nT·ª•ng s·ª±, ƒëi·ªÅn t√†m t·ªãnh th·∫•t b·∫°i,\nH√¥n nh√¢n, quan qu√°ch b·∫•t an ninh."
  },
  "Vƒ©": {
    tenNgay: "Vƒ© H·ªèa H·ªï - S·∫ßm B√†nh",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con C·ªçp, ch·ªß tr·ªã ng√†y th·ª© 3.",
    nenLam: "M·ªçi vi·ªác ƒë·ªÅu t·ªët, nh·∫•t l√† c√∫ng t·∫ø, c·∫ßu ph√∫c, x√¢y d·ª±ng.",
    kiengCu: "C∆∞·ªõi h·ªèi, may v√°, ƒë√≥ng gi∆∞·ªùng.",
    ngoaiLe: "T·∫°i H·ª£i, M√£o, M√πi k·ªµ ch√¥n c·∫•t. G·∫∑p ng√†y M√£o l√† ƒêƒÉng Vi√™n, c√°c vi·ªác t·ªët ƒë·∫πp.",
    tho: "Vƒ© tinh t·∫°o t√°c ƒë·∫Øc quan ban,\nCanh t√°c, gi√° th√∫ v∆∞·ª£ng ƒëi·ªÅn t√†m,\nMai t√°ng, tu b·ªï di√™n ni√™n th·ªç,\nKhai m√¥n, ph√≥ng th·ªßy tu long an."
  },
  "C∆°": {
    tenNgay: "C∆° Th·ªßy B√°o - Ph√πng D·ªã",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con B√°o, ch·ªß tr·ªã ng√†y th·ª© 4.",
    nenLam: "R·∫•t t·ªët cho vi·ªác x√¢y d·ª±ng, ƒë·ªông th·ªï, l·ª£p nh√†, mua b√°n ƒë·∫•t ƒëai, gieo tr·ªìng.",
    kiengCu: "K·ªµ nh·∫•t l√† khai tr∆∞∆°ng, c∆∞·ªõi h·ªèi, ch√¥n c·∫•t v√† ƒë√≥ng thuy·ªÅn.",
    ngoaiLe: "T·∫°i Th√¨n, T√Ω, Th√¢n th√¨ t·ªët. T·∫°i Tu·∫•t l√† Ph·ª•c ƒêo·∫°n S√°t, k·ªµ ch√¥n c·∫•t, xu·∫•t h√†nh.",
    tho: "C∆° tinh t·∫°o t√°c ƒë·∫°i c√°t t∆∞·ªùng,\nTu·∫ø tu·∫ø ni√™n ni√™n ƒë·∫°i c√°t x∆∞∆°ng,\nMai t√°ng, tu ph√≤ng, sinh qu√Ω t·ª≠,\nGi√° th√∫, ƒëi·ªÅn t√†m v∆∞·ª£ng gia quang."
  },
  "ƒê·∫©u": {
    tenNgay: "ƒê·∫©u M·ªôc Gi·∫£i - Chu V·∫≠n",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con Cua, ch·ªß tr·ªã ng√†y th·ª© 5.",
    nenLam: "T·ªët cho vi·ªác xu·∫•t h√†nh, kh·ªüi c√¥ng nh·ªè, mua b√°n, giao d·ªãch.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi, l√†m nh√†, ƒë√†o gi·∫øng.",
    ngoaiLe: "T·∫°i T√Ω l√† ƒêƒÉng Vi√™n, r·∫•t t·ªët. T·∫°i Th√¢n, Th√¨n c≈©ng t·ªët.",
    tho: "ƒê·∫©u tinh t·∫°o t√°c ch·ªß chi√™u t√†i,\nVƒÉn v≈© quan vi√™n v·ªã ƒë·ªânh thai,\nƒêi·ªÅn tr·∫°ch, ti·ªÅn t√†i thi√™n v·∫°n ti·∫øn,\nH√¥n nh√¢n, quan qu√°ch ph√∫c lai."
  },
  "Ng∆∞u": {
    tenNgay: "Ng∆∞u Kim Ng∆∞u - T·∫ø Tu√¢n",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con Tr√¢u, ch·ªß tr·ªã ng√†y th·ª© 6.",
    nenLam: "Ch·ªâ t·ªët cho vi·ªác an t√°ng, tu s·ª≠a m·ªô ph·∫ßn, t·∫ø t·ª±.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi, khai tr∆∞∆°ng, l√†m nh√†, ƒëi xa. L√†m nh·ªØng vi·ªác n√†y th∆∞·ªùng g·∫∑p chuy·ªán l√¥i th√¥i, gia ƒë√¨nh b·∫•t h√≤a, hao t√†i.",
    ngoaiLe: "T·∫°i H·ª£i, D·∫≠u, S·ª≠u, tuy g·∫∑p Hung tinh nh∆∞ng v·∫´n c√≥ th·ªÉ l√†m ƒë∆∞·ª£c. G·∫∑p ng√†y S·ª≠u l√† ƒêƒÉng Vi√™n, t·ªët v·ª´a.",
    tho: "Ng∆∞u tinh t·∫°o t√°c ch·ªß tai nguy,\nC·ª≠u ho√†nh tam tai b·∫•t kh·∫£ ch·ªâ,\nGia ƒë·∫°o b·∫•t an, nh√¢n kh·∫©u tho√°i,\nH√¥n nh√¢n, thi·ªáp l·ªô, ch·ªß ph√¢n ly."
  },
  "N·ªØ": {
    tenNgay: "N·ªØ Th·ªï B·ª©c - C·∫£nh ƒêan",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con D∆°i, ch·ªß tr·ªã ng√†y th·ª© 7.",
    nenLam: "T·ªët cho vi·ªác c·∫Øt may, ch·ªØa b·ªánh, d·ªçn d·∫πp.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi, an t√°ng, l√†m nh√†. G·∫∑p sao n√†y th∆∞·ªùng g√¢y chia ly, b·ªánh t·∫≠t, ki·ªán t·ª•ng.",
    ngoaiLe: "T·∫°i H·ª£i, D·∫≠u, S·ª≠u v·∫´n c√≥ th·ªÉ d√πng ƒë∆∞·ª£c. G·∫∑p ng√†y D·∫≠u l√† ƒêƒÉng Vi√™n, t·ªët.",
    tho: "N·ªØ tinh t·∫°o t√°c t·ªïn nh√¢n ƒëinh,\nTrung ni√™n gia ƒë·∫°o ch·ªß linh ƒëinh,\nGi√° th√∫ chi√™u lai tam tu·∫ø t·ª≠,\nH√¥n nh√¢n, quan qu√°ch t·∫•t tai sinh."
  },
  "H∆∞": {
    tenNgay: "H∆∞ Nh·∫≠t Th·ª≠ - C√°i Di√™n",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con Chu·ªôt, ch·ªß tr·ªã ng√†y Ch·ªß Nh·∫≠t.",
    nenLam: "T·ªët cho vi·ªác ph√° d·ª°, tr·ªã b·ªánh.",
    kiengCu: "M·ªçi vi·ªác l·ªõn nh∆∞ c∆∞·ªõi h·ªèi, khai tr∆∞∆°ng, x√¢y c·∫•t, an t√°ng ƒë·ªÅu r·∫•t x·∫•u. Sao n√†y ch·ªß v·ªÅ s·ª± h∆∞ kh√¥ng, m·∫•t m√°t.",
    ngoaiLe: "T·∫°i Th√¢n, T√Ω, Th√¨n m·ªçi vi·ªác ƒë·ªÅu t·ªët. G·∫∑p ng√†y Th√¨n l√† ƒêƒÉng Vi√™n.",
    tho: "H∆∞ tinh t·∫°o t√°c ch·ªß tai ∆∞∆°ng,\nNam n·ªØ t·∫Øc hung, di vong th√¢n,\nT·ª•ng s·ª±, ƒëi·ªÅn t√†m t·ªãnh th·∫•t b·∫°i,\nH√¥n nh√¢n, gi√° th√∫ b·∫•t an ninh."
  },
  "Nguy": {
    tenNgay: "Nguy Nguy·ªát Y·∫øn - Ki√™n ƒê√†m",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con √ân, ch·ªß tr·ªã ng√†y th·ª© 2.",
    nenLam: "T·ªët cho vi·ªác x√¢y d·ª±ng, tr·ªìng tr·ªçt.",
    kiengCu: "K·ªµ c∆∞·ªõi h·ªèi, ƒëi thuy·ªÅn, an t√°ng. G·∫∑p sao n√†y l√†m vi·ªác g√¨ c≈©ng th·∫•y kh√¥ng ch·∫Øc ch·∫Øn, nguy hi·ªÉm.",
    ngoaiLe: "T·∫°i Th√¢n, T√Ω, Th√¨n m·ªçi vi·ªác ƒë·ªÅu t·ªët. T·∫°i T·ªµ l√† Di·ªát ƒê·ªãa, r·∫•t k·ªµ.",
    tho: "Nguy tinh t·∫°o t√°c ch·ªß √¥n ho√†ng,\nH√¥n nh√¢n, gi√° th√∫ b·∫•t an t∆∞·ªùng,\nKhai m√¥n, ph√≥ng th·ªßy chi√™u tai h·ªça,\nMai t√°ng tu ph√≤ng ti·ªÉu nhi vong."
  },
  "Th·∫•t": {
    tenNgay: "Th·∫•t H·ªèa Tr∆∞ - C·∫£nh ƒêan",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con Heo, ch·ªß tr·ªã ng√†y th·ª© 3.",
    nenLam: "M·ªçi vi·ªác ƒë·ªÅu t·ªët, nh·∫•t l√† kh·ªüi c√¥ng, x√¢y c·∫•t, c∆∞·ªõi h·ªèi, khai tr∆∞∆°ng, an t√°ng.",
    kiengCu: "Kh√¥ng c√≥.",
    ngoaiLe: "T·∫°i Tu·∫•t l√† Nh·∫≠p Mi·∫øu, r·∫•t t·ªët. G·∫∑p ng√†y Tu·∫•t l√† ƒêƒÉng Vi√™n.",
    tho: "Th·∫•t tinh t·∫°o t√°c ƒë·∫°i c√°t t∆∞·ªùng,\nGi√° th√∫, ƒëi·ªÅn t√†m v∆∞·ª£ng gia quang,\nAn s√†ng, ph√≥ng th·ªßy, sinh qu√Ω t·ª≠,\nT√≤ng th·ª≠ vinh hoa ph√∫ qu√Ω tr∆∞·ªùng."
  },
  "B√≠ch": {
    tenNgay: "B√≠ch Th·ªßy Du - T·∫°ng Cung",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con R√°i C√°, ch·ªß tr·ªã ng√†y th·ª© 4.",
    nenLam: "M·ªçi vi·ªác ƒë·ªÅu t·ªët. ƒê·∫∑c bi·ªát t·ªët cho vi·ªác c√∫ng t·∫ø, c·∫ßu ph√∫c, x√¢y c·∫•t, c∆∞·ªõi h·ªèi, m·ªü c·ª≠a h√†ng.",
    kiengCu: "K·ªµ nh·∫•t vi·ªác s·ª≠a ch·ªØa, tu b·ªï kho t√†ng.",
    ngoaiLe: "T·∫°i H·ª£i, M√£o, M√πi m·ªçi vi·ªác ƒë·ªÅu t·ªët. G·∫∑p ng√†y H·ª£i l√† ƒêƒÉng Vi√™n, ƒë·∫°i c√°t.",
    tho: "B√≠ch tinh t·∫°o t√°c ti·∫øn ƒëi·ªÅn ng∆∞u,\nT√≤ng th·ª≠ gia m√¥n ph√∫ qu√Ω l∆∞u,\nGi√° th√∫, khai m√¥n, quan l·ªôc ch√≠,\nB√°ch s·ª± tu du v∆∞·ª£ng nh√¢n kh·∫©u."
  },
  "Khu√™": {
    tenNgay: "Khu√™ M·ªôc Lang - M√£ V≈©",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con S√≥i, ch·ªß tr·ªã ng√†y th·ª© 5.",
    nenLam: "T·ªët cho vi·ªác khai tr∆∞∆°ng, h·ªçc h√†nh, thi c·ª≠.",
    kiengCu: "ƒê·∫°i k·ªµ an t√°ng. Kh√¥ng n√™n kh·ªüi c√¥ng x√¢y d·ª±ng nh√† c·ª≠a, d·ªÖ g√¢y b·∫•t h√≤a trong gia ƒë√¨nh.",
    ngoaiLe: "G·∫∑p ng√†y Th√¨n th√¨ ƒêƒÉng Vi√™n, t·ªët.",
    tho: "Khu√™ tinh t·∫°o t√°c h·ªØu tai ∆∞∆°ng,\nGia n·ªôi t√≤ng th·ª≠ b·∫•t an ninh,\nMai t√°ng, tu ph√≤ng kinh kh·ªëc kh·∫•p,\nH√¥n nh√¢n, gi√° th√∫ b·∫•t c√°t t∆∞·ªùng."
  },
  "L√¢u": {
    tenNgay: "L√¢u Kim C·∫©u - L∆∞u Long",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con Ch√≥, ch·ªß tr·ªã ng√†y th·ª© 6.",
    nenLam: "M·ªçi vi·ªác ƒë·ªÅu t·ªët. ƒê·∫∑c bi·ªát t·ªët cho c∆∞·ªõi h·ªèi, khai tr∆∞∆°ng, x√¢y d·ª±ng, ch·ªØa b·ªánh, xu·∫•t h√†nh.",
    kiengCu: "K·ªµ nh·∫•t vi·ªác kh·ªüi c√¥ng ƒë√≥ng thuy·ªÅn.",
    ngoaiLe: "T·∫°i D·∫≠u l√† ƒêƒÉng Vi√™n. T·∫°i T√Ω, Ng·ªç, M√£o c≈©ng t·ªët.",
    tho: "L√¢u tinh t·∫°o t√°c v∆∞·ª£ng gia ƒëinh,\nGi√° th√∫, khai m√¥n, v·∫°n s·ª± th√†nh,\nT√≤ng th·ª≠ gia m√¥n tƒÉng ph√∫c l·ªôc,\nH·ªØu nh√¢n x∆∞ng t·ª•ng, v∆∞·ª£ng m√¥n ƒë√¨nh."
  },
  "V·ªã": {
    tenNgay: "V·ªã Th·ªï Trƒ© - C·∫£nh ƒêan",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con G√† Trƒ©, ch·ªß tr·ªã ng√†y th·ª© 7.",
    nenLam: "T·ªët cho vi·ªác x√¢y d·ª±ng, ƒë·ªông th·ªï, c∆∞·ªõi h·ªèi, an t√°ng.",
    kiengCu: "K·ªµ ƒëi thuy·ªÅn.",
    ngoaiLe: "G·∫∑p ng√†y D·∫≠u l√† ƒêƒÉng Vi√™n.",
    tho: "V·ªã tinh t·∫°o t√°c s·ª± nh∆∞ t√¢m,\nGia m√¥n, ƒëi·ªÅn tr·∫°ch, v∆∞·ª£ng nh√¢n ƒëinh,\nGi√° th√∫, khai m√¥n, quan l·ªôc ch√≠,\nMai t√°ng tu ph√≤ng t·ª≠ t√¥n h∆∞ng."
  },
  "M√£o": {
    tenNgay: "M√£o Nh·∫≠t K√™ - V∆∞∆°ng L∆∞∆°ng",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con G√†, ch·ªß tr·ªã ng√†y Ch·ªß Nh·∫≠t.",
    nenLam: "T·ªët cho vi·ªác c·∫Øt may, h·ªçc h√†nh, l√†m nh·ªØng vi·ªác nh·ªè.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi, an t√°ng, x√¢y c·∫•t nh√† c·ª≠a, khai tr∆∞∆°ng. G·∫∑p sao n√†y m·ªçi vi·ªác l·ªõn ƒë·ªÅu b·∫•t th√†nh, tr·∫Øc tr·ªü.",
    ngoaiLe: "T·∫°i H·ª£i, M√£o, M√πi k·ªµ ch√¥n c·∫•t. T·∫°i D·∫≠u l√† ƒêƒÉng Vi√™n, c√≥ th·ªÉ d√πng.",
    tho: "M√£o tinh t·∫°o t√°c ch·ªß tai ho·∫°,\nH√¥n nh√¢n, gi√° th√∫ b·∫•t kh·∫£ th√†nh,\nPh·ª• nh√¢n mang thai vi b·∫•t l·ª£i,\nGia ƒë·∫°o t√≤ng th·ª≠ b·∫•t an ninh."
  },
  "T·∫•t": {
    tenNgay: "T·∫•t Nguy·ªát √î - Tr·∫ßn Tu·∫•n",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con Qu·∫°, ch·ªß tr·ªã ng√†y th·ª© 2.",
    nenLam: "M·ªçi vi·ªác ƒë·ªÅu t·ªët. T·ªët nh·∫•t cho vi·ªác khai tr∆∞∆°ng, xu·∫•t h√†nh, x√¢y d·ª±ng, c∆∞·ªõi h·ªèi, an t√°ng.",
    kiengCu: "Kh√¥ng c√≥.",
    ngoaiLe: "T·∫°i T·ªµ, D·∫≠u, S·ª≠u ƒë·ªÅu t·ªët. G·∫∑p ng√†y D·∫≠u l√† ƒêƒÉng Vi√™n.",
    tho: "T·∫•t tinh t·∫°o t√°c ƒë·∫°i c√°t t∆∞·ªùng,\nH√¥n nh√¢n, gi√° th√∫, v∆∞·ª£ng ƒëi·ªÅn trang,\nKhai m√¥n, ph√≥ng th·ªßy, sinh qu√Ω t·ª≠,\nGia m√¥n h∆∞ng v∆∞·ª£ng, ph√∫c th·ªç tr∆∞·ªùng."
  },
  "Ch·ªßy": {
    tenNgay: "Ch·ªßy H·ªèa H·∫ßu - Ph√≥ Tu·∫•n",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con Kh·ªâ, ch·ªß tr·ªã ng√†y th·ª© 3.",
    nenLam: "T·ªët cho vi·ªác c·∫ßu t√†i, h·ªçc h√†nh, thi c·ª≠.",
    kiengCu: "K·ªµ nh·∫•t l√† an t√°ng, x√¢y c·∫•t, khai tr∆∞∆°ng, c∆∞·ªõi h·ªèi. L√†m nh·ªØng vi·ªác n√†y d·ªÖ g·∫∑p th·ªã phi, ki·ªán t·ª•ng.",
    ngoaiLe: "T·∫°i Th√¢n l√† ƒêƒÉng Vi√™n, t·ªët.",
    tho: "Ch·ªßy tinh t·∫°o t√°c ch·ªß tang vong,\nT√°ng s·ª±, tu ph√≤ng, ƒë·∫°i b·∫•t t∆∞·ªùng,\nH√¥n nh√¢n, quan qu√°ch, ƒëa kh·∫©u thi·ªát,\nGia tr·∫°ch t√≤ng th·ª≠ b·∫•t an khang."
  },
  "S√¢m": {
    tenNgay: "S√¢m Th·ªßy Vi√™n - ƒê·ªó M·∫≠u",
    danhGia: "T·ªët (B√¨nh T√∫)",
    tuongTinh: "Con V∆∞·ª£n, ch·ªß tr·ªã ng√†y th·ª© 4.",
    nenLam: "T·ªët cho vi·ªác c∆∞·ªõi h·ªèi, x√¢y d·ª±ng, l√†m vi·ªác thi·ªán.",
    kiengCu: "K·ªµ an t√°ng, ƒë√†o gi·∫øng, ƒëi thuy·ªÅn.",
    ngoaiLe: "T·∫°i Th√¢n l√† ƒêƒÉng Vi√™n, r·∫•t t·ªët. T·∫°i T√Ω, Th√¨n c≈©ng t·ªët.",
    tho: "S√¢m tinh t·∫°o t√°c ƒë·∫Øc quan v·ªã,\nT√≤ng th·ª≠ gia m√¥n ƒë·∫°i c√°t l·ª£i,\nGi√° th√∫, tu ph√≤ng, tƒÉng ph√∫c th·ªç,\nPh√∫ qu√Ω, vinh hoa, v∆∞·ª£ng t·ª≠ t√¥n."
  },
  "T·ªânh": {
    tenNgay: "T·ªânh M·ªôc H√£n - Di√™u K·ª≥",
    danhGia: "T·ªët (B√¨nh T√∫)",
    tuongTinh: "Con H∆∞∆°u, ch·ªß tr·ªã ng√†y th·ª© 5.",
    nenLam: "T·∫°o t√°c nhi·ªÅu vi·ªác r·∫•t t·ªët nh∆∞ tr·ªï c·ª≠a d·ª±ng c·ª≠a, m·ªü th√¥ng ƒë∆∞·ªùng n∆∞·ªõc, ƒë√†o m∆∞∆°ng m√≥c gi·∫øng, ƒëi thuy·ªÅn, x√¢y c·∫•t, nh·∫≠m ch·ª©c ho·∫∑c nh·∫≠p h·ªçc.",
    kiengCu: "L√†m sanh ph·∫ßn, ƒë√≥ng th·ªç ƒë∆∞·ªùng, ch√¥n c·∫•t hay tu b·ªï m·ªô ph·∫ßn.",
    ngoaiLe: "Sao T·ªânh t·∫°i M√πi, H·ª£i, M√£o m·ªçi vi·ªác t·ªët. T·∫°i M√πi l√† Nh·∫≠p Mi·∫øu n√™n kh·ªüi ƒë·ªông vinh quang.",
    tho: "T·ªânh tinh t·∫°o t√°c v∆∞·ª£ng t√†m ƒëi·ªÅn,\nKim b·∫£ng ƒë·ªÅ danh ƒë·ªá nh·∫•t ti√™n,\nMai t√°ng, tu ph√≤ng kinh t·ªët t·ª≠,\nH·ªët phong t·∫≠t nh·∫≠p ho√†ng ƒëi√™n tuy·ªÅn.\nKhai m√¥n, ph√≥ng th·ªßy chi√™u t√†i b·∫°ch,\nNg∆∞u m√£ tr∆∞ d∆∞∆°ng v∆∞·ª£ng m·∫°c c√°t,\nQu·∫£ ph·ª• ƒëi·ªÅn ƒë∆∞·ªùng lai nh·∫≠p tr·∫°ch,\nNhi t√¥n h∆∞ng v∆∞·ª£ng h·ªØu d∆∞ ti·ªÅn."
  },
  "Qu·ª∑": {
    tenNgay: "Qu·ª∑ Kim D∆∞∆°ng - V∆∞∆°ng B√°",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con D√™, ch·ªß tr·ªã ng√†y th·ª© 6.",
    nenLam: "T·ªët cho vi·ªác c√∫ng t·∫ø, tr·ªã b·ªánh.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi, an t√°ng, x√¢y c·∫•t. G·∫∑p sao n√†y l√† sao x·∫•u nh·∫•t trong 28 sao, l√†m vi·ªác g√¨ c≈©ng th·∫•t b·∫°i, b·ªánh t·∫≠t, ch·∫øt ch√≥c.",
    ngoaiLe: "G·∫∑p ng√†y T√Ω th√¨ ƒêƒÉng Vi√™n, c√≥ th·ªÉ d√πng.",
    tho: "Qu·ª∑ tinh t·∫°o t√°c ƒëa tai ∆∞∆°ng,\nH·ªØu b·ªánh, h·ªØu t·ª•ng, ki·∫øn quan tr∆∞·ªùng,\nMai t√°ng, tu ph√≤ng, gia ƒë√¨nh b·∫°i,\nH√¥n nh√¢n, gi√° th√∫, ki·∫øn c√¥ n∆∞∆°ng."
  },
  "Li·ªÖu": {
    tenNgay: "Li·ªÖu Th·ªï Ch∆∞∆°ng - Ng√¥ H√°n",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con Ho·∫µng, ch·ªß tr·ªã ng√†y th·ª© 7.",
    nenLam: "Kh√¥ng c√≥ vi·ªác g√¨ t·ªët.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi, an t√°ng, x√¢y c·∫•t, khai tr∆∞∆°ng. ƒê√¢y l√† m·ªôt hung tinh m·∫°nh, l√†m vi·ªác g√¨ c≈©ng b·∫•t l·ª£i, gia ƒë·∫°o suy b·∫°i, con c√°i kh√≥ nu√¥i.",
    ngoaiLe: "G·∫∑p ng√†y T√Ω, Th√¢n, Th√¨n c≈©ng kh√¥ng t·ªët.",
    tho: "Li·ªÖu tinh t·∫°o t√°c ch·ªß tao ∆∞∆°ng,\nGia tr·∫°ch t√≤ng th·ª≠ b·∫•t an khang,\nMai t√°ng, tu ph√≤ng, sinh t·∫≠t b·ªánh,\nH√¥n nh√¢n, gi√° th√∫, c·ª≠u h·∫≠u ∆∞∆°ng."
  },
  "Tinh": {
    tenNgay: "Tinh Nh·∫≠t M√£ - Ph√πng D·ªã",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con Ng·ª±a, ch·ªß tr·ªã ng√†y Ch·ªß Nh·∫≠t.",
    nenLam: "T·ªët cho vi·ªác h·ªçc h√†nh, thi c·ª≠.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi, an t√°ng, x√¢y c·∫•t.",
    ngoaiLe: "T·∫°i D·∫ßn, Ng·ªç, Tu·∫•t ƒë·ªÅu k·ªµ. G·∫∑p ng√†y Ng·ªç l√† ƒêƒÉng Vi√™n, nh∆∞ng v·∫´n x·∫•u.",
    tho: "Tinh tinh t·∫°o t√°c ch·ªß √¥n ho√†ng,\nH√¥n nh√¢n, gi√° th√∫, b·∫•t an t∆∞·ªùng,\nQuan s·ª±, h√¨nh t√π, ƒëa t·∫≠t b·ªánh,\nMai t√°ng, tu ph√≤ng, ki·∫øn tai ∆∞∆°ng."
  },
  "Tr∆∞∆°ng": {
    tenNgay: "Tr∆∞∆°ng Nguy·ªát L·ªôc - V·∫°n Tu",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con H∆∞∆°u, ch·ªß tr·ªã ng√†y th·ª© 2.",
    nenLam: "M·ªçi vi·ªác ƒë·ªÅu t·ªët. ƒê·∫∑c bi·ªát t·ªët cho c∆∞·ªõi h·ªèi, khai tr∆∞∆°ng, x√¢y d·ª±ng, nh·∫≠m ch·ª©c, l√†m vi·ªác thi·ªán.",
    kiengCu: "K·ªµ nh·∫•t l√† ch√¥n c·∫•t, l√†m sanh ph·∫ßn.",
    ngoaiLe: "T·∫°i T√Ω, Th√¢n, Th√¨n c≈©ng k·ªµ ch√¥n c·∫•t. G·∫∑p ng√†y Th√¢n l√† ƒêƒÉng Vi√™n.",
    tho: "Tr∆∞∆°ng tinh t·∫°o t√°c v∆∞·ª£ng ƒëi·ªÅn t√†m,\nGi√° th√∫, h√¥n nh√¢n, ƒë·∫°i c√°t x∆∞∆°ng,\nKhai m√¥n, ph√≥ng th·ªßy, t√†i nguy√™n ch√≠,\nGia m√¥n h∆∞ng v∆∞·ª£ng, t·ª≠ t√¥n c∆∞·ªùng."
  },
  "D·ª±c": {
    tenNgay: "D·ª±c H·ªèa X√† - C·∫£nh ƒêan",
    danhGia: "X·∫•u (Hung T√∫)",
    tuongTinh: "Con R·∫Øn, ch·ªß tr·ªã ng√†y th·ª© 3.",
    nenLam: "Kh√¥ng c√≥ vi·ªác g√¨ t·ªët.",
    kiengCu: "ƒê·∫°i k·ªµ c∆∞·ªõi h·ªèi, an t√°ng, x√¢y c·∫•t, khai tr∆∞∆°ng. Sao n√†y ch·ªß v·ªÅ s·ª± chia ly, tan t√°c.",
    ngoaiLe: "T·∫°i T·ªµ, D·∫≠u, S·ª≠u c≈©ng kh√¥ng t·ªët.",
    tho: "D·ª±c tinh t·∫°o t√°c ch·ªß ph√¢n tr∆∞∆°ng,\nH√¥n nh√¢n, gi√° th√∫, b·∫•t an t∆∞·ªùng,\nMai t√°ng, tu ph√≤ng, ƒëa t·∫≠t b·ªánh,\nB√°ch s·ª± kinh doanh, ch·ªß ph√° b·∫°i."
  },
  "Ch·∫©n": {
    tenNgay: "Ch·∫©n Th·ªßy D·∫´n - L∆∞u Tr·ª±c",
    danhGia: "T·ªët (Ki·∫øt T√∫)",
    tuongTinh: "Con Giun, ch·ªß tr·ªã ng√†y th·ª© 4.",
    nenLam: "T·ªët cho vi·ªác c√∫ng t·∫ø, gieo tr·ªìng, c∆∞·ªõi h·ªèi.",
    kiengCu: "K·ªµ khai tr∆∞∆°ng, l√†m nh√†, ƒëi thuy·ªÅn, an t√°ng.",
    ngoaiLe: "T·∫°i Th√¢n, T√Ω, Th√¨n ƒë·ªÅu t·ªët. G·∫∑p ng√†y Th√¨n l√† ƒêƒÉng Vi√™n.",
    tho: "Ch·∫©n tinh t·∫°o t√°c ƒë·∫°i c√°t t∆∞·ªùng,\nT√≤ng th·ª≠ gia m√¥n v∆∞·ª£ng ƒëi·ªÅn trang,\nGi√° th√∫, khai m√¥n, quan l·ªôc ch√≠,\nPh√∫ qu√Ω, vinh hoa, ph√∫c th·ªç tr∆∞·ªùng."
  }
};

// ===== Ng≈© h√†nh n·∫°p √¢m (60 hoa gi√°p) =====
const NGU_HANH_NAP_AM = {
  "Gi√°p T√Ω": "H·∫£i Trung Kim",   "·∫§t S·ª≠u": "H·∫£i Trung Kim",
  "B√≠nh D·∫ßn": "L√¥ Trung H·ªèa",   "ƒêinh M√£o": "L√¥ Trung H·ªèa",
  "M·∫≠u Th√¨n": "ƒê·∫°i L√¢m M·ªôc",    "K·ª∑ T·ªµ": "ƒê·∫°i L√¢m M·ªôc",
  "Canh Ng·ªç": "L·ªô B√†ng Th·ªï",    "T√¢n M√πi": "L·ªô B√†ng Th·ªï",
  "Nh√¢m Th√¢n": "Ki·∫øm Phong Kim","Qu√Ω D·∫≠u": "Ki·∫øm Phong Kim",
  "Gi√°p Tu·∫•t": "S∆°n ƒê·∫ßu H·ªèa",   "·∫§t H·ª£i": "S∆°n ƒê·∫ßu H·ªèa",
  "B√≠nh T√Ω": "Gi·∫£n H·∫° Th·ªßy",    "ƒêinh S·ª≠u": "Gi·∫£n H·∫° Th·ªßy",
  "M·∫≠u D·∫ßn": "Th√†nh ƒê·∫ßu Th·ªï",   "K·ª∑ M√£o": "Th√†nh ƒê·∫ßu Th·ªï",
  "Canh Th√¨n": "B·∫°ch L·∫°p Kim",  "T√¢n T·ªµ": "B·∫°ch L·∫°p Kim",
  "Nh√¢m Ng·ªç": "D∆∞∆°ng Li·ªÖu M·ªôc","Qu√Ω M√πi": "D∆∞∆°ng Li·ªÖu M·ªôc",
  "Gi√°p Th√¢n": "Tuy·ªÅn Trung Th·ªßy","·∫§t D·∫≠u": "Tuy·ªÅn Trung Th·ªßy",
  "B√≠nh Tu·∫•t": "·ªêc Th∆∞·ª£ng Th·ªï","ƒêinh H·ª£i": "·ªêc Th∆∞·ª£ng Th·ªï",
  "M·∫≠u T√Ω": "T√≠ch L·ªãch H·ªèa",   "K·ª∑ S·ª≠u": "T√≠ch L·ªãch H·ªèa",
  "Canh D·∫ßn": "T√πng B√°ch M·ªôc", "T√¢n M√£o": "T√πng B√°ch M·ªôc",
  "Nh√¢m Th√¨n": "Tr∆∞·ªùng L∆∞u Th·ªßy","Qu√Ω T·ªµ": "Tr∆∞·ªùng L∆∞u Th·ªßy",
  "Gi√°p Ng·ªç": "Sa Trung Kim",  "·∫§t M√πi": "Sa Trung Kim",
  "B√≠nh Th√¢n": "S∆°n H·∫° H·ªèa",   "ƒêinh D·∫≠u": "S∆°n H·∫° H·ªèa",
  "M·∫≠u Tu·∫•t": "B√¨nh ƒê·ªãa M·ªôc",  "K·ª∑ H·ª£i": "B√¨nh ƒê·ªãa M·ªôc",
  "Canh T√Ω": "B√≠ch Th∆∞·ª£ng Th·ªï","T√¢n S·ª≠u": "B√≠ch Th∆∞·ª£ng Th·ªï",
  "Nh√¢m D·∫ßn": "Kim B·∫°ch Kim",  "Qu√Ω M√£o": "Kim B·∫°ch Kim",
  "Gi√°p Th√¨n": "Ph√∫c ƒêƒÉng H·ªèa","·∫§t T·ªµ": "Ph√∫c ƒêƒÉng H·ªèa",
  "B√≠nh Ng·ªç": "Thi√™n H√† Th·ªßy", "ƒêinh M√πi": "Thi√™n H√† Th·ªßy",
  "M·∫≠u Th√¢n": "ƒê·∫°i D·ªãch Th·ªï",  "K·ª∑ D·∫≠u": "ƒê·∫°i D·ªãch Th·ªï",
  "Canh Tu·∫•t": "Thoa Xuy·∫øn Kim","T√¢n H·ª£i": "Thoa Xuy·∫øn Kim",
  "Nh√¢m T√Ω": "Tang ƒê·ªë M·ªôc",    "Qu√Ω S·ª≠u": "Tang ƒê·ªë M·ªôc",
  "Gi√°p D·∫ßn": "ƒê·∫°i Kh√™ Th·ªßy",  "·∫§t M√£o": "ƒê·∫°i Kh√™ Th·ªßy",
  "B√≠nh Th√¨n": "Sa Trung Th·ªï", "ƒêinh T·ªµ": "Sa Trung Th·ªï",
  "M·∫≠u Ng·ªç": "Thi√™n Th∆∞·ª£ng H·ªèa","K·ª∑ M√πi": "Thi√™n Th∆∞·ª£ng H·ªèa",
  "Canh Th√¢n": "Th·∫°ch L·ª±u M·ªôc","T√¢n D·∫≠u": "Th·∫°ch L·ª±u M·ªôc",
  "Nh√¢m Tu·∫•t": "ƒê·∫°i H·∫£i Th·ªßy", "Qu√Ω H·ª£i": "ƒê·∫°i H·∫£i Th·ªßy"
};

// ===== C√°t tinh / Hung tinh / Th·∫ßn s√°t =====
const CAT_TINH = {
  "Thi√™n ƒê·ª©c": "T·ªët m·ªçi vi·ªác, nh·∫•t l√† c·∫ßu t√†i, c·∫ßu ph√∫c",
  "Nguy·ªát ƒê·ª©c": "C∆∞·ªõi h·ªèi, c·∫ßu ph√∫c, khai tr∆∞∆°ng",
  "Thi√™n H·ª∑": "H·ª∑ s·ª±, c∆∞·ªõi h·ªèi, g·∫∑p g·ª°",
  "Tam H·ª£p": "M·ªçi vi·ªác hanh th√¥ng, c·∫ßu t√†i l·ªôc thu·∫≠n",
  "L·ª•c H·ª£p": "H√≤a thu·∫≠n, c∆∞·ªõi h·ªèi, giao d·ªãch"
};

const HUNG_TINH = {
  "Thi√™n C∆∞∆°ng": "Hung s·ª±, k·ªµ x√¢y d·ª±ng, khai tr∆∞∆°ng",
  "ƒê·ªãa T·∫∑c": "K·ªµ xu·∫•t h√†nh, m·∫•t m√°t",
  "Nguy·ªát K·ªµ": "Ng√†y x·∫•u, ƒë·∫°i k·ªµ kh·ªüi s·ª± l·ªõn",
  "Kh√¥ng Vong": "K·ªµ giao d·ªãch, k√Ω k·∫øt",
  "Ti·ªÉu H·ªìng Sa": "K·ªµ c∆∞·ªõi h·ªèi"
};

const THAN_SAT = {
  "T√Ω":  { cat: ["Thi√™n ƒê·ª©c"], hung: ["ƒê·ªãa T·∫∑c"] },
  "S·ª≠u": { cat: ["Nguy·ªát ƒê·ª©c"], hung: ["Thi√™n C∆∞∆°ng"] },
  "D·∫ßn": { cat: ["Tam H·ª£p"], hung: ["Nguy·ªát K·ªµ"] },
  "M√£o": { cat: ["Thi√™n H·ª∑"], hung: ["Kh√¥ng Vong"] },
  "Th√¨n":{ cat: ["L·ª•c H·ª£p"], hung: ["Ti·ªÉu H·ªìng Sa"] },
  "T·ªµ":  { cat: ["Thi√™n ƒê·ª©c"], hung: ["ƒê·ªãa T·∫∑c"] },
  "Ng·ªç": { cat: ["Nguy·ªát ƒê·ª©c"], hung: ["Thi√™n C∆∞∆°ng"] },
  "M√πi": { cat: ["Tam H·ª£p"], hung: ["Nguy·ªát K·ªµ"] },
  "Th√¢n":{ cat: ["Thi√™n H·ª∑"], hung: ["Kh√¥ng Vong"] },
  "D·∫≠u": { cat: ["L·ª•c H·ª£p"], hung: ["Ti·ªÉu H·ªìng Sa"] },
  "Tu·∫•t":{ cat: ["Thi√™n ƒê·ª©c"], hung: ["ƒê·ªãa T·∫∑c"] },
  "H·ª£i": { cat: ["Nguy·ªát ƒê·ª©c"], hung: ["Thi√™n C∆∞∆°ng"] }
};





  // ===== Core astronomy helpers =====
  function jdn(dd, mm, yy){
    let a = INT((14 - mm) / 12);
    let y = yy + 4800 - a;
    let m = mm + 12 * a - 3;
    let jd = dd + INT((153*m+2)/5) + 365*y + INT(y/4) - INT(y/100) + INT(y/400) - 32045;
    return jd;
  }

  function jdn2dateFunc(jd){
    let Z, A, alpha, B, C, D, E, dd, mm, yyyy;
    Z = jd;
    if (Z < 2299161) {
      A = Z;
    } else {
      alpha = INT((Z-1867216.25)/36524.25);
      A = Z + 1 + alpha - INT(alpha/4);
    }
    B = A + 1524;
    C = INT((B-122.1)/365.25);
    D = INT(365.25*C);
    E = INT((B-D)/30.6001);
    dd = INT(B - D - INT(30.6001*E));
    if (E < 14) mm = E - 1; else mm = E - 13;
    if (mm < 3) yyyy = C - 4715; else yyyy = C - 4716;
    return [dd, mm, yyyy];
  }

  function decodeLunarYear(yy, k){
    let monthLengths = [29,30];
    let regularMonths = new Array(12);
    let offsetOfTet = k >> 17;
    let leapMonth = k & 0xf;
    let leapMonthLength = monthLengths[(k >> 16) & 0x1];
    let solarNY = jdn(1,1,yy);
    let currentJD = solarNY + offsetOfTet;
    let j = k >> 4;
    for (let i=0;i<12;i++){
      regularMonths[12 - i - 1] = monthLengths[j & 0x1];
      j >>= 1;
    }
    let ly = [];
    if (leapMonth === 0){
      for (let mm=1; mm<=12; mm++){
        ly.push(new LunarDate(1, mm, yy, 0, currentJD));
        currentJD += regularMonths[mm-1];
      }
    } else {
      for (let mm=1; mm<=leapMonth; mm++){
        ly.push(new LunarDate(1, mm, yy, 0, currentJD));
        currentJD += regularMonths[mm-1];
      }
      ly.push(new LunarDate(1, leapMonth, yy, 1, currentJD));
      currentJD += leapMonthLength;
      for (let mm=leapMonth+1; mm<=12; mm++){
        ly.push(new LunarDate(1, mm, yy, 0, currentJD));
        currentJD += regularMonths[mm-1];
      }
    }
    return ly;
  }

  function getYearInfo(yyyy){
    let yearCode;
    if (yyyy < 1900) yearCode = TK19[yyyy - 1800];
    else if (yyyy < 2000) yearCode = TK20[yyyy - 1900];
    else if (yyyy < 2100) yearCode = TK21[yyyy - 2000];
    else yearCode = TK22[yyyy - 2100];
    return decodeLunarYear(yyyy, yearCode);
  }

  function LunarDate(dd, mm, yy, leap, jd){
    this.day = dd; this.month = mm; this.year = yy; this.leap = leap; this.jd = jd;
  }

  const FIRST_DAY = jdn(25,1,1800);
  const LAST_DAY = jdn(31,12,2199);

  function findLunarDate(jd, ly){
    if (jd > LAST_DAY || jd < FIRST_DAY || ly[0].jd > jd){
      return new LunarDate(0,0,0,0,jd);
    }
    let i = ly.length-1;
    while (jd < ly[i].jd) i--;
    let off = jd - ly[i].jd;
    return new LunarDate(ly[i].day + off, ly[i].month, ly[i].year, ly[i].leap, jd);
  }

  function getLunarDate(dd, mm, yyyy){
    let ly = getYearInfo(yyyy);
    let jd = jdn(dd, mm, yyyy);
    if (jd < ly[0].jd){
      ly = getYearInfo(yyyy - 1);
    }
    return findLunarDate(jd, ly);
  }

  // Sun longitude (Jean Meeus)
  function SunLongitude(jd){
    let T = (jd - 2451545.0) / 36525;
    let T2 = T*T;
    let dr = PI/180;
    let M = 357.52910 + 35999.05030*T - 0.0001559*T2 - 0.00000048*T*T2;
    let L0 = 280.46645 + 36000.76983*T + 0.0003032*T2;
    let DL = (1.914600 - 0.004817*T - 0.000014*T2)*Math.sin(dr*M);
    DL = DL + (0.019993 - 0.000101*T)*Math.sin(2*dr*M) + 0.000290*Math.sin(3*dr*M);
    let L = (L0 + DL) * dr;
    L = L - PI*2*INT(L/(PI*2));
    return L;
  }
  function getSunLongitude(dayNumber, timeZone){
    return INT(SunLongitude(dayNumber - 0.5 - timeZone/24.0) / PI * 12);
  }

  function getYearCanChi(year){
    return CAN[(year+6) % 10] + " " + CHI[(year+8) % 12];
  }
  function getCanHour0(jdnv){
    return CAN[((jdnv-1)*2) % 10];
  }
  function getCanChi(lunar){
    let dayName = CAN[(lunar.jd + 9) % 10] + " " + CHI[(lunar.jd+1)%12];
    let monthName = CAN[(lunar.year*12 + lunar.month + 3) % 10] + " " + CHI[(lunar.month+1)%12];
    if (lunar.leap === 1) monthName += " (nhu·∫≠n)";
    let yearName = getYearCanChi(lunar.year);
    return [dayName, monthName, yearName];
  }

  function getDayName(lunarDate){
    if (lunarDate.day === 0) return "";
    const cc = getCanChi(lunarDate);
    return "Ng√†y " + cc[0] + ", th√°ng " + cc[1] + ", nƒÉm " + cc[2];
  }

  function getGioHoangDao(jd){
    const chiOfDay = (jd + 1) % 12;
    const gioHD = GIO_HD[chiOfDay % 6];
    let ret = ""; let count = 0;
    for (let i=0; i<12; i++){
      if (gioHD.charAt(i) === '1'){
        ret += CHI[i] + " " + CHI_EMOJI[i] + 
               ' <b style="color:#ffff99;">(' + ((i*2+23)%24) + '-' + ((i*2+1)%24) + 'h)</b>';
        if (count++ < 5) ret += ", ";
      }
    }
    return ret;
  }


  function getGioHacDao(jd){
    const chiOfDay = (jd + 1) % 12;
    const gioHD = GIO_HD[chiOfDay % 6]; // D√πng chung m·∫£ng GIO_HD
    let ret = ""; let count = 0;
    for (let i=0; i<12; i++){
      if (gioHD.charAt(i) === '0'){ // Ch·ªâ kh√°c ·ªü ƒë√¢y, t√¨m s·ªë '0' thay v√¨ '1'
        ret += '<b style="color:#ff9933;">' + CHI[i] + '</b>' + " " + CHI_EMOJI[i] + 
               ' <b style="color:#ff9933;">(' + ((i*2+23)%24) + '-' + ((i*2+1)%24) + 'h)</b>';
        if (count++ < 5) ret += ", ";
      }
    }
    return ret;
  }

// =======================================================
// ----- B·∫ÆT ƒê·∫¶U CODE M·ªöI - H√ÄM XU·∫§T H√ÄNH N√ÇNG C·∫§P -----
// =======================================================

  function getHuongXuatHanh(jd) {
    const canNgay = CAN[(jd + 9) % 10];
    const huong = THAN_HUONG[canNgay]; // L·∫•y d·ªØ li·ªáu t·ª´ b·∫£ng m·ªõi
    if (huong) {
      let tot = `H·ª∑ Th·∫ßn: <b style="color:#00ff00;">${huong.hyThan}</b> - T√†i Th·∫ßn: <b style="color:#00ff00;">${huong.taiThan}</b>`;
      let xau = `Tr√°nh: <b style="color:#ff9933;">${huong.hacThan} (H·∫°c Th·∫ßn)</b>`;
      return `${tot} | ${xau}`;
    }
    return "Kh√¥ng r√µ";
  }


	function getViecTotXau(lunarDate) {
		const cc = getCanChi(lunarDate);
		const ngay = cc[0]; // VD: "ƒêinh M√£o"
		const nen = VIEC_NEN_LAM[ngay] || "Kh√¥ng r√µ";
		const kieng = VIEC_KIENGLAM[ngay] || "Kh√¥ng r√µ";
		return { nen, kieng };
	}
  
  
  function getThanSat(lunarDate) {
		
		 // ===== Th·∫≠p nh·ªã tr·ª±c =====
	  const TRUC_ORDER = [
	    "Ki·∫øn","Tr·ª´","M√£n","B√¨nh","ƒê·ªãnh","Ch·∫•p",
	    "Ph√°","Nguy","Th√†nh","Thu","Khai","B·∫ø"
	  ];
	  const CHI_ORDER = ["T√Ω","S·ª≠u","D·∫ßn","M√£o","Th√¨n","T·ªµ","Ng·ªç","M√πi","Th√¢n","D·∫≠u","Tu·∫•t","H·ª£i"];
	  const canChiTruc = getCanChi(lunarDate); 
	  const chiNgayTruc = canChiTruc[0].split(" ")[1];   // v√≠ d·ª•: "T·ªµ"
	  const chiThangTruc = canChiTruc[1].split(" ")[1];  // v√≠ d·ª•: "Th√¢n"
	  const chiIndexNgay = CHI_ORDER.indexOf(chiNgayTruc);
	  const chiIndexThang = CHI_ORDER.indexOf(chiThangTruc);
		const trucIndex = (chiIndexNgay - (chiIndexThang + 1) + 12) % 12;
	  const trucName = TRUC_ORDER[trucIndex];
	  const trucInfo = THAP_NHI_TRUC[trucName];


    // Nh·ªã th·∫≠p b√°t t√∫
    const saoNames = Object.keys(NHI_THAP_BAT_TU);
    const saoIndex = (lunarDate.jd + 11) % 28;
    const saoName = saoNames[saoIndex];
    const saoInfo = NHI_THAP_BAT_TU[saoName];

    // Ng≈© h√†nh n·∫°p √¢m
    const cc = getCanChi(lunarDate);
    const ngayCC = cc[0]; // v√≠ d·ª•: "ƒêinh M√£o"
    const napAm = NGU_HANH_NAP_AM[ngayCC] || "Kh√¥ng r√µ";

    // Th·∫ßn s√°t (C√°t/Hung tinh)
    const chiNgay = ngayCC.split(" ")[1];
    const thanSatData = THAN_SAT[chiNgay] || { cat: [], hung: [] };

    const catList = thanSatData.cat.map(c => `${c} (${CAT_TINH[c] || ""})`).join("; ");
    const hungList = thanSatData.hung.map(h => `${h} (${HUNG_TINH[h] || ""})`).join("; ");
    
    const EMOJI_TRUC = {
      "Ki·∫øn":"üö™","Tr·ª´":"‚úÇÔ∏è","M√£n":"üåï","B√¨nh":"‚öñÔ∏è",
      "ƒê·ªãnh":"üìú","Ch·∫•p":"‚úçÔ∏è","Ph√°":"üí•","Nguy":"‚ö†Ô∏è",
      "Th√†nh":"üè∞","Thu":"üåæ","Khai":"üîë","B·∫ø":"üîí"
    };

    const EMOJI_SAO = {
      "Gi√°c":"üêâ","Cang":"ü¶Ñ","ƒê√™":"üèûÔ∏è","Ph√≤ng":"üè†","T√¢m":"‚ù§Ô∏è","Vƒ©":"ü¶ö","C∆°":"üßµ","ƒê·∫©u":"üõ∂",
      "Ng∆∞u":"üêÇ","N·ªØ":"üë©","H∆∞":"üå´Ô∏è","Nguy":"‚ö†Ô∏è","Th·∫•t":"7Ô∏è‚É£","B√≠ch":"üíé","Khu√™":"üìö","L√¢u":"üèØ",
      "V·ªã":"üçΩÔ∏è","M√£o":"üêá","T·∫•t":"üß¶","Ch·ªßy":"üëÑ","S√¢m":"üå±","T·ªânh":"üíß","Qu·ª∑":"üëπ","Li·ªÖu":"üåø",
      "Tinh":"‚≠ê","Tr∆∞∆°ng":"üìú","D·ª±c":"ü™Ω","Ch·∫©n":"ü©∫"
    };
    
    return {
      truc: { 
        name: trucName, 
        info: trucInfo, 
        emoji: EMOJI_TRUC[trucName] || "" 
      },
      sao: { 
        name: saoName, 
        info: saoInfo, 
        emoji: EMOJI_SAO[saoName] || "" 
      },
      napAm: napAm,
      thanSat: { 
        cat: catList, 
        hung: hungList 
      }
    };
  }


  // ===== UI helpers (render month table) =====
  const DAYNAMES = ["T2","T3","T4","T5","T6","T7","CN"];
  const PRINT_OPTS = { fontSize: "13pt", tableWidth: "100%" };

  function printStyle(today, currentLunarDate, backgroundType = 'normal'){
    const formatthutrongtuan = TUAN[(currentLunarDate.jd + 1) % 7];
    let res = "";
    res += '<style>\n';

    // --- PH·∫¶N 1: CSS N·ªÄN T·∫¢NG (B·ªê C·ª§C, K√çCH TH∆Ø·ªöC) D√ôNG CHUNG CHO C·∫¢ 2 CH·∫æ ƒê·ªò ---
    res += `
      .tennam{ text-align:center; font-size:150%; line-height:120%; font-weight:bold; }
      .thongtin_letet{ text-align:center; margin-left:auto; margin-right:auto; font-size:clamp(70%,80%,90%); font-weight:bold; }
      .thangnam{ text-align:center; font-size:clamp(80%,90%,100%); line-height:120%; font-weight:bold; border-top-left-radius: 16px; border-top-right-radius: 16px;}
      .thangnam_amlich, .ThangNgayGioTiet1 { text-align:right; font-size:clamp(60%,80%,90%); font-weight:bold; }
      .ThangNgayGioTiet{ text-align:right; font-size:clamp(50%,60%,70%); font-weight:bold; }
      .todayduonglich{ text-align:center; font-size:clamp(420%,460%,480%); line-height:100%; font-weight:bold; }
      .thutrongtuan{ text-align:center; font-size:clamp(90%,100%,120%); line-height:160%; font-weight:bold; }
      .ngayamlich{ text-align:center; font-size:clamp(220%,240%,260%); font-weight:bold; height: 30px; padding-top: 16px; }
      .giohoangdao{ text-align:center; font-size:clamp(60%,65%,70%); font-weight:bold; line-height:140%; padding-bottom: 8px; }
      .viecnenlam, .viecnentranh, .cat_tinh, .hung_tinh { text-align:left; font-size:clamp(60%,65%,70%); font-weight:bold; line-height:150%;}
      
      .toggle-btn { display:block; width:100%; border:none; padding: 4px 0; border-radius:6px; cursor:pointer; font-weight:bold; font-size:clamp(60%,65%,70%); transition:all 0.3s ease; margin: 0; }
      .toggle-btn-container { padding: 4px 0; }
      
      .toggle-content { display:none; opacity:0; transform: translateY(-10px); transition: opacity 0.4s ease, transform 0.4s ease; }
      .toggle-content.show { display:table-row; opacity:1; transform: translateY(0); }
      .thang{ font-size:${PRINT_OPTS.fontSize}; padding:1; line-height:100%; font-family:Tahoma,Verdana,Arial; table-layout:fixed; background-color:transparent; }
      .tenthang{ text-align:center; font-size:125%; line-height:100%; font-weight:bold; }
      .navi-l,.navi-r{ text-align:center; font-size:75%; line-height:100%; font-weight:bold; padding: 4px 0; }
      .tenthang { padding: 4px 0; }
      
      .ngaytuan, .ngaytuan_t7, .ngaytuan_cn{ width:14%; text-align:center; font-size: 90%; padding: 6px 0; }
      
      /* <<< THAY ƒê·ªîI 1: Th√™m kho·∫£ng tr·ªëng B√äN TR√äN m·ªói √¥ ng√†y */
      .ngaythang { padding-top: 10px; }

      .am, .am2{ text-align:right; padding-right:3px; font-size:65%; }
      
      .t2t6, .t7, .cn{ text-align:center; font-size:125%; }

      .nav-btn { border: none; padding: 4px 8px; border-radius: 6px; cursor: pointer; font-weight: bold; }
      .homnay{ font-weight:bold; }
    `;

    // --- PH·∫¶N 2: CSS M√ÄU S·∫ÆC CHO CH·∫æ ƒê·ªò 'NORMAL' (M·∫∂C ƒê·ªäNH) ---
    res += `
      .tennam{ color:#000; background-color:#CCC }
      .thongtin_letet{ text-shadow:-1px 0 yellow,0 1px yellow,1px 0 yellow,0 -1px yellow; color:#f00 }
      .thangnam{ color:#000; background-color:rgba(204,255,204,.5); }
      .thangnam_amlich{ color:#000 }
      .ThangNgayGioTiet{ color:#000 }
      .ThangNgayGioTiet1{ text-shadow:-1px 0 yellow,0 1px yellow,1px 0 yellow,0 -1px yellow; color:#00f }
      .todayduonglich{ color:${(formatthutrongtuan==='Ch·ªß Nh·∫≠t'?'#f00':(formatthutrongtuan==='Th·ª© B·∫£y'?'#008000':'#ff0'))}; text-shadow:-3px 0 blue,0 3px blue,3px 0 blue,0 -3px blue }
      .thutrongtuan{ color:${(formatthutrongtuan==='Ch·ªß Nh·∫≠t'?'#f00':(formatthutrongtuan==='Th·ª© B·∫£y'?'#008000':'#000'))} }
      .ngayamlich{ color:#00f; text-shadow:-2px 0 yellow,0 2px yellow,2px 0 yellow,0 -2px yellow; }
      .giohoangdao{ color:#fff; background-color:rgba(0,0,255,.5)}
      .viecnenlam{ color:#00ffff; background-color:rgba(0,0,255,.5)}
      .viecnentranh{ color:#ff0000; background-color:rgba(0,0,255,.5)}
      .cat_tinh{ color:#00ff00; background-color:rgba(0,0,255,.5)}
      .hung_tinh{ color:#ff0000; background-color:rgba(0,0,255,.5)}
      .toggle-btn { color:#fff; background-color: rgba(0,0,255,0.2); }
      .navi-l{ color:red } .navi-r{ color:#330033 }
      .tenthang{ color:#330033; background-color:#CCFFCC }
      .navi-l,.navi-r{ background-color:#CCFFCC }
      .ngaytuan{ color:#330033; background-color:#FFFFCC }
      .ngaytuan_t7{ color:green; background-color:#FFFFCC }
      .ngaytuan_cn{ color:#f00; background-color:#FFFFCC }
      .ngaythang{ background-color:#FDFDF0 }
      .homnay{ background-color:#FFF000 }
      .tet{ background-color:#FFCC99 }
      .am{ color:blue }
      .am2{ color:#004080 }
      .t2t6{ color:black }
      .t7{ color:green }
      .cn{ color:red }
      .nav-btn { background-color: rgba(128, 128, 128,0.3); }
      .nav-btn:hover { background-color: rgba(128, 128, 128,0.6); }

      .giohoangdao { border-bottom: 1px solid rgba(0,0,255,0.2); }
      .toggle-btn-container { border-bottom: 1px solid rgba(0,0,255,0.2); }
      .navi-l, .navi-r, .tenthang { border-bottom: 1px solid #a2bda2; }
      .ngaytuan, .ngaytuan_t7, .ngaytuan_cn { border-bottom: 1px solid #dedeac; }
    `;

    // --- PH·∫¶N 3: GHI ƒê√à CSS N·∫æU L√Ä CH·∫æ ƒê·ªò 'TRANSPARENT' ---
    if (backgroundType === 'transparent') {
      res += `
        /* 1. X√≥a t·∫•t c·∫£ h√¨nh n·ªÅn v√† m√†u n·ªÅn */
        .lunar-card > div:first-child, .thangnam, .giohoangdao, .viecnenlam, .viecnentranh,
        .cat_tinh, .hung_tinh, .tenthang, .navi-l, .navi-r, .ngaytuan, .ngaytuan_t7,
        .ngaytuan_cn, .ngaythang, .tet, .homnay, .nav-btn, .toggle-btn, .thutrongtuan div {
            background: transparent !important;
        }

        /* 2. Chuy·ªÉn m√†u ch·ªØ m·∫∑c ƒë·ªãnh (v·ªën l√† ƒëen, xanh, t√≠m) th√†nh tr·∫Øng */
        .tennam, .thangnam, .thangnam_amlich, .ThangNgayGioTiet, .thutrongtuan, .t2t6,
        .am, .am2, .tenthang, .navi-r, .ngaytuan, .toggle-btn, .viecnenlam b, .viecnentranh b,
        .cat_tinh b, .hung_tinh b, .giohoangdao {
            color: #ffffff !important;
        }
        
        /* 3. X√≥a b·ªè b√≥ng ch·ªØ (text-shadow) ƒë·ªÉ d·ªÖ ƒë·ªçc h∆°n */
        .thongtin_letet, .ThangNgayGioTiet1, .todayduonglich, .ngayamlich {
             text-shadow: none !important;
        }

        /* 4. B·ªè vi·ªÅn cho c√°c n√∫t b√™n trong th·∫ª */
        .toggle-btn, .nav-btn {
            border: none !important;
        }
        .nav-btn:hover, .toggle-btn:hover {
            background-color: rgba(255, 255, 255, 0.2) !important;
        }

        /* 5. L√†m n·ªïi b·∫≠t ng√†y h√¥m nay b·∫±ng m·ªôt l·ªõp n·ªÅn m·ªù thay v√¨ m√†u v√†ng */
        .homnay {
            background-color: rgba(255, 255, 255, 0.15) !important;
            border-radius: 8px;
        }

        /* 6. Th√™m c√°c ƒë∆∞·ªùng k·∫ª ph√¢n c√°ch cho ch·∫ø ƒë·ªô transparent */
        .giohoangdao, .toggle-btn-container, .navi-l, .navi-r, .tenthang, .ngaytuan, .ngaytuan_t7, .ngaytuan_cn {
            border-bottom: 1px solid rgba(255, 255, 255, 0.2) !important;
        }
      `;
    }
    res += '</style>';
    return res;
  }

  function printHead(mm, yy){
    let res = "";
    const monthName = mm+"/"+yy;
    res += `<tr><td colspan="2" class="navi-l"><button id="prev-year" class="nav-btn">&lt;&lt;</button>  <button id="prev-month" class="nav-btn">&lt;</button></td>`;
    res += `<td colspan="3" class="tenthang"><button id="reset-today" style="all:unset;cursor:pointer;" class="nav-btn">${monthName}</button></td>`;
    res += `<td colspan="2" class="navi-r"><button id="next-month" class="nav-btn">&gt;</button>  <button id="next-year" class="nav-btn">&gt;&gt;</button></td></tr>`;
    res += '<tr>';
    for (let i=0;i<=6;i++){
      if (DAYNAMES[i]==='CN') res += '<td class="ngaytuan_cn">CN</td>';
      else if (DAYNAMES[i]==='T7') res += '<td class="ngaytuan_t7">T7</td>';
      else res += `<td class="ngaytuan">${DAYNAMES[i]}</td>`;
    }
    res += '</tr>';
    return res;
  }

  function printEmptyCell(){
    return '<td class="ngaythang"><div class="cn">&nbsp;</div><div class="am">&nbsp;</div></td>';
  }

  function printCell(lunarDate, solarDate, solarMonth, solarYear, today){
    let cellClass = "ngaythang";
    let solarClass = "t2t6";
    let lunarClass = "am";
    
    const dow = (lunarDate.jd + 1) % 7;
    if (dow === 0){ solarClass = "cn"; }
    else if (dow === 6){ solarClass = "t7"; }

    if (solarDate === today.getDate() && solarMonth === (today.getMonth()+1) && solarYear === today.getFullYear()){
      cellClass = "homnay";
    }
    if (lunarDate.day === 1 && lunarDate.month === 1){ cellClass = "tet"; }
    if (lunarDate.leap === 1){ lunarClass = "am2"; }

    let lunar = lunarDate.day;
    if (solarDate === 1 || lunar === 1){ lunar = `${lunarDate.day}/${lunarDate.month}`; }

    let title = getDayName(lunarDate);
    return `<td class="${cellClass}" title="${title}">`+
      `<div class="${solarClass}">${solarDate}</div>`+
      `<div style="font-size:50%;" class="${lunarClass}">${lunar}</div>`+
      `</td>`;
  }


  function printTable(mm, yy, today, bgrOpacity){
    const jd = jdn(today.getDate(), mm, yy);
    const currentMonthArr = getMonth(mm, yy);
    if (currentMonthArr.length === 0) return "";
    const ld1 = currentMonthArr[0];
    const emptyCells = (ld1.jd + 0) % 7;

    const LunarHead = getYearCanChi(ld1.year);
    const currentLunarDate = getLunarDate(today.getDate(), mm, yy);

	const dow = (currentLunarDate.jd + 1) % 7;
	const bgImages = [
		"amlich_khai_t2.png", "amlich_khai_t3.png", "amlich_khai_t4.png",
		"amlich_khai_t5.png", "amlich_khai_t6.png", "amlich_khai_t7.png", "amlich_khai_cn.png"
	];
	const bg = bgImages[dow];
	const bgUrl = new URL(`./images/${bg}`, import.meta.url).href;

    let res = "";

    let backgroundStyle = `background:url('${bgUrl}') no-repeat center center; background-size:cover;`;
    if (typeof bgrOpacity === 'number' && bgrOpacity >= 0 && bgrOpacity <= 1) {
        const overlayAlpha = 1 - bgrOpacity;
        backgroundStyle = `background: linear-gradient(rgba(0, 0, 0, ${overlayAlpha}), rgba(0, 0, 0, ${overlayAlpha})), url('${bgUrl}') no-repeat center center; background-size:cover;`;
    }

	res += `<div style="${backgroundStyle} border-top-left-radius: 16px; border-top-right-radius: 16px;">`;
    res += `<table class="thang" border="0" cellpadding="1" cellspacing="2" width="${PRINT_OPTS.tableWidth}">`;
    res += `<tr><td colspan="7" class="thangnam">Th√°ng ${mm} nƒÉm ${yy}</td></tr>`;

    res += '<tr><td colspan="7">';
    res += '<table align="center" width="100%" border="0" cellpadding="0" cellspacing="0">';
    res += `<tr><td class="todayduonglich" colspan="5">${today.getDate()}</td></tr>`;
    res += `<tr><td class="thutrongtuan" colspan="5"><div style="margin:0 auto; width:20%; border-radius:6px; background-color:rgba(204,255,204,.5);">${TUAN[(currentLunarDate.jd + 1) % 7]}</div></td></tr>`;
    res += '<tr>';
    res += '<td width="34%" colspan="2">';
    const showthangarray = ["Th√°ng Gi√™ng","Th√°ng Hai","Th√°ng Ba","Th√°ng T∆∞","Th√°ng NƒÉm","Th√°ng S√°u","Th√°ng B·∫£y","Th√°ng T√°m","Th√°ng Ch√≠n","Th√°ng M∆∞·ªùi","Th√°ng M∆∞·ªùi M·ªôt","Th√°ng Ch·∫°p"];
    let thangAm = showthangarray[currentLunarDate.month-1] || ("Th√°ng " + currentLunarDate.month);
    if (currentLunarDate.leap===1) thangAm += " (Nhu·∫≠n)";
		const ly = getYearInfo(currentLunarDate.year);
		let daysInLunarMonth = 0;
		for (let i = 0; i < ly.length; i++) {
			if (ly[i].month === currentLunarDate.month && ly[i].leap === currentLunarDate.leap) {
				if (i < ly.length - 1) {
					daysInLunarMonth = ly[i+1].jd - ly[i].jd;
				} else {
					daysInLunarMonth = 30;
				}
				break;
			}
		}
		if (daysInLunarMonth === 29) { thangAm += " (T)"; } 
    else if (daysInLunarMonth === 30) { thangAm += " (ƒê)"; }

    res += `<div class="ThangNgayGioTiet1" style="text-align:center;">${thangAm}</div>`;
    res += `<div class="ngayamlich">${currentLunarDate.day}</div>`;
    res += `<div class="ThangNgayGioTiet1" style="text-align:center; line-height:160%;">${getYearCanChi(currentLunarDate.year)} (${currentLunarDate.year})</div>`;
    res += '</td>';
    res += '<td class="thongtin_letet">';
    if (currentLunarDate.day === 1) res += '<div style="padding-bottom:8px;">M√πng M·ªôt</div>';
    else if (currentLunarDate.day === 15) res += '<div style="padding-bottom:8px;">Ng√†y R·∫±m</div>';

    const d_m = `${today.getDate()}/${mm}`;
    const idxDL = NGAY_LE_DL.indexOf(d_m); const infoDL = idxDL !== -1 ? NGAY_LE_DL_STRING[idxDL] : " ";
    const d_m_al = `${currentLunarDate.day}/${currentLunarDate.month}`;
    const idxAL = NGAY_LE_AL.indexOf(d_m_al); const infoAL = idxAL !== -1 ? NGAY_LE_AL_STRING[idxAL] : " ";
    res += `<div>${infoDL}<br>${infoAL}</div>`;
    res += '</td>';
    res += '<td width="34%" colspan="2">';
    res += `<div class="ThangNgayGioTiet1" style="text-align:right; margin-right:10px;"><i class="ThangNgayGioTiet">Th√°ng: </i>${getMonthCanChi(currentLunarDate)}</div>`;
    res += `<div class="ThangNgayGioTiet1" style="text-align:right; margin-right:10px;"><i class="ThangNgayGioTiet">Ng√†y: </i>${CAN[(jd + 9) % 10]} ${CHI[(jd+1)%12]}</div>`;
    res += `<div class="ThangNgayGioTiet1" style="text-align:right; margin-right:10px;"><i class="ThangNgayGioTiet">Gi·ªù ƒë·∫ßu: </i>${getCanHour0(jd)} ${CHI[0]}</div>`;
    res += `<div class="ThangNgayGioTiet1" style="text-align:right; margin-right:10px;"><i class="ThangNgayGioTiet">Ti·∫øt: </i>${TIETKHI[getSunLongitude(jd+1, 7.0)]}</div>`;
    res += '</td>';
    res += '</tr>';
    res += `<tr><td class="giohoangdao" colspan="5">Gi·ªù ho√†ng ƒë·∫°o:<br>${getGioHoangDao(jd)}</td></tr>`;
    
    res += `<tr><td colspan="5" class="toggle-btn-container">
      <button class="toggle-btn" onclick="
        const rows = [...this.closest('table').querySelectorAll('.toggle-content')];
        const isHidden = rows.every(r => !r.classList.contains('show'));
        rows.forEach((r, i) => {
          setTimeout(() => {
            if(isHidden){ r.classList.add('show'); } else { r.classList.remove('show'); }
          }, i * 100);
        });
        this.innerHTML = isHidden ? 'Thu g·ªçn üîº' : 'Xem th√™m üîΩ';
      ">Xem th√™m üîΩ</button>
    </td></tr>`;

		res += `<tr class="toggle-content"><td class="viecnenlam" colspan="5">üåë<b style="color:#fff;">- Gi·ªù h·∫Øc ƒë·∫°o:</b> ${getGioHacDao(jd)}</td></tr>`;
		res += `<tr class="toggle-content"><td class="viecnenlam" colspan="5">üß≠<b style="color:#fff;">- H∆∞·ªõng xu·∫•t h√†nh:</b> ${getHuongXuatHanh(jd)}</td></tr>`;
    const viec = getViecTotXau(currentLunarDate);
    const thanSat = getThanSat(currentLunarDate);
    res += `<tr class="toggle-content"><td class="viecnenlam" colspan="5"><b style="color:#fff;">${thanSat.truc.emoji}- Tr·ª±c:</b> ${thanSat.truc.name} <span style="color:#fff;">| T·ªët:</span> ${thanSat.truc.info.tot} <span style="color:#fff;">| X·∫•u: </span><span style="color:#ff9933;">${thanSat.truc.info.xau}</span></td></tr>`;
		res += `<tr class="toggle-content">
			<td class="viecnenlam" colspan="5" style="text-align:left; line-height:1.6;">
				<span style="font-weight:bold; color:#fff; font-size:110%;">${thanSat.sao.emoji}- Nh·ªã Th·∫≠p B√°t T√∫: ${thanSat.sao.name}</span>
				<span style="font-style:italic; color:#ffff99;"> (${thanSat.sao.info.tenNgay || ""})</span>
			</td></tr>`;
		const chiTietDanhGia = thanSat.sao.info.danhGia.substring(thanSat.sao.info.danhGia.indexOf('('));
		const thoText = (thanSat.sao.info.tho || '').replace(/^\s+/gm, '');
		res += `<tr class="toggle-content">
			<td class="viecnenlam" colspan="5" style="text-align:left; padding:10px; line-height:1.6; border-top:1px solid rgba(255,255,255,0.2);">
				<div style="font-style:italic; color:#ffff99; margin-bottom:6px;">
					<span style="
						background-color:${thanSat.sao.info.danhGia.includes('T·ªët') ? 'rgba(0,255,0,0.8)' : 
																		 (thanSat.sao.info.danhGia.includes('X·∫•u') ? 'rgba(255,0,0,0.8)' : 
																		 'rgba(255,255,0,0.7)')};
						color:#fff; font-weight:bold; padding:2px 10px; border-radius:8px; margin-right:8px;
					">
						${thanSat.sao.info.danhGia.split(' ')[0]}
					</span>
					${chiTietDanhGia} - ${thanSat.sao.info.tuongTinh}
				</div>
				<div><b style="color:#fff;">üëç N√™n l√†m:</b> ${thanSat.sao.info.nenLam}</div>
				<div style="margin:5px 0;"><b style="color:#fff;">üëé Ki√™ng c·ªØ:</b> <span style="color:#ff9933;">${thanSat.sao.info.kiengCu}</span></div>
				<div><b style="color:#fff;">‚ú® Ngo·∫°i l·ªá:</b> ${thanSat.sao.info.ngoaiLe}</div>
				<div style="font-family:'Times New Roman',serif; font-style:italic; color:#ffff99; margin-top:2px; padding-top:2px; border-bottom:1px solid rgba(255,255,255,0.2); text-align:center; white-space:pre-wrap;">${thoText}
				</div>
			</td></tr>`;
    res += `<tr class="toggle-content"><td class="viecnenlam" colspan="5"><b style="color:#fff;">üåå- Ng≈© h√†nh n·∫°p √¢m:</b> ${thanSat.napAm}</td></tr>`;
    res += `<tr class="toggle-content"><td class="cat_tinh" colspan="5"><b style="color:#fff;">üçÄ- C√°t tinh:</b> ${thanSat.thanSat.cat || "Kh√¥ng c√≥"}</td></tr>`;
    res += `<tr class="toggle-content"><td class="hung_tinh" colspan="5"><b style="color:#fff;">‚ö°- Hung tinh:</b> <span style="color:#ff9933;">${thanSat.thanSat.hung || "Kh√¥ng c√≥"}</span></td></tr>`;
    res += `<tr class="toggle-content"><td class="viecnenlam" colspan="5"><b style="color:#fff;">‚úÖ- Vi·ªác n√™n l√†m:</b> ${viec.nen}</td></tr>`;
    res += `<tr class="toggle-content"><td class="viecnentranh" colspan="5"><b style="color:#fff;">üö´- Tr√°nh:</b> <span style="color:#ff9933;">${viec.kieng}</span></td></tr>`;
    
    res += '</table></td></tr>';
    res += printHead(mm, yy);
    for (let i=0;i<6;i++){
      res += '<tr>';
      for (let j=0;j<7;j++){
        let k = 7*i + j;
        if (k < emptyCells || k >= emptyCells + currentMonthArr.length){
          res += printEmptyCell();
        } else {
          let solar = k - emptyCells + 1;
          let ld1c = currentMonthArr[k - emptyCells];
          res += printCell(ld1c, solar, mm, yy, today);
        }
      }
      res += '</tr>';
    }
    res += '</table></div>';
    return res;
  }

  function getMonth(mm, yy){
    let mm1, yy1;
    if (mm < 12){ mm1 = mm+1; yy1 = yy; } else { mm1 = 1; yy1 = yy+1; }
    let jd1 = jdn(1, mm, yy);
    let jd2 = jdn(1, mm1, yy1);
    let ly1 = getYearInfo(yy);
    let tet1 = ly1[0].jd;
    let result = [];
    if (tet1 <= jd1){
      for (let i=jd1;i<jd2;i++) result.push(findLunarDate(i, ly1));
    } else if (jd1 < tet1 && jd2 < tet1){
      ly1 = getYearInfo(yy - 1);
      for (let i=jd1;i<jd2;i++) result.push(findLunarDate(i, ly1));
    } else if (jd1 < tet1 && tet1 <= jd2){
      let ly2 = getYearInfo(yy - 1);
      for (let i=jd1;i<tet1;i++) result.push(findLunarDate(i, ly2));
      for (let i=tet1;i<jd2;i++) result.push(findLunarDate(i, ly1));
    }
    return result;
  }

  function getMonthCanChi(currentLunarDate){
    const year = currentLunarDate.year;
    const month = currentLunarDate.month;
    return CAN[(year*12 + month + 3) % 10] + " " + CHI[(month+1)%12];
  }

  // ====== Home Assistant Card ======
  class LunarCalendarCard extends HTMLElement{
    static getConfigElement() { return null; }
    static getStubConfig() { return { background: 'normal' }; }

		constructor(){
			super();
			const today = new Date();
			this.displayMonth = today.getMonth() + 1;
			this.displayYear = today.getFullYear();
		}

    setConfig(config){
      this.config = config || {};
      if (!this.shadowRoot){
        this.attachShadow({mode:'open'});
      }
      if (!this.card){
        this.card = document.createElement('ha-card');
        this.shadowRoot.appendChild(this.card);
      }
      
      this.card.style.borderRadius = '16px'; 

      if (this.config.background === 'transparent') {
        this.card.style.background = 'transparent';
        this.card.style.border = '1px solid rgba(255, 255, 255, 0.3)';
        this.card.style.boxShadow = 'none';
      } else {
        this.card.style.background = '';
        this.card.style.border = '';
        this.card.style.boxShadow = '';
      }

      this._render();
    }

    set hass(hass){
      this._hass = hass;
    }

    _render(){
      const today = new Date();
			const mm = this.displayMonth;
			const yy = this.displayYear;

      const currentLunarDate = getLunarDate(today.getDate(), today.getMonth()+1, today.getFullYear());
      const backgroundType = this.config.background || 'normal';
      const bgrOpacity = this.config.background_opacity;

      const html = [
        printStyle(today, currentLunarDate, backgroundType),
        printTable(mm, yy, today, bgrOpacity)
      ].join('');

      this.card.innerHTML = `<div class="lunar-card">${html}</div>`;

			const prevBtn = this.card.querySelector('#prev-month');
			if (prevBtn){
				prevBtn.addEventListener('click', () => {
					this.displayMonth--;
					if (this.displayMonth < 1){ this.displayMonth = 12; this.displayYear--; }
					this._render();
				});
			}

			const nextBtn = this.card.querySelector('#next-month');
			if (nextBtn){
				nextBtn.addEventListener('click', () => {
					this.displayMonth++;
					if (this.displayMonth > 12){ this.displayMonth = 1; this.displayYear++; }
					this._render();
				});
			}

			const prevYearBtn = this.card.querySelector('#prev-year');
			if (prevYearBtn){
				prevYearBtn.addEventListener('click', () => {
					this.displayYear--;
					this._render();
				});
			}

			const nextYearBtn = this.card.querySelector('#next-year');
			if (nextYearBtn){
				nextYearBtn.addEventListener('click', () => {
					this.displayYear++;
					this._render();
				});
			}

			const resetBtn = this.card.querySelector('#reset-today');
			if (resetBtn){
				resetBtn.addEventListener('click', () => {
					const today = new Date();
					this.displayMonth = today.getMonth() + 1;
					this.displayYear = today.getFullYear();
					this._render();
				});
			}
		}

    getCardSize(){ return 8; }
  }

  if (!customElements.get('lich-block-am-duong-viet-nam')){
    customElements.define('lich-block-am-duong-viet-nam', LunarCalendarCard);
  }

})();